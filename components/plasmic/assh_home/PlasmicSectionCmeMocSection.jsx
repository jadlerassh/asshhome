/* eslint-disable */
/* tslint:disable */
// @ts-nocheck
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: 34tvEQuyqfK98iGCjMbawB
// Component: QQidogip4Svc
import * as React from "react";
import { useRouter } from "next/router";
import {
  Stack as Stack__,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants,
  useDollarState
} from "@plasmicapp/react-web";
import { useDataEnv } from "@plasmicapp/react-web/lib/host";
import { usePlasmicDataOp } from "@plasmicapp/react-web/lib/data-sources";
import ItemSectionTitleDescriptionItem from "../../ItemSectionTitleDescriptionItem"; // plasmic-import: jaOmCC9X_Oxf/component
import ItemExternalLinkCardItem from "../../ItemExternalLinkCardItem"; // plasmic-import: ie8FiHmZHhtB/component
import ItemCalloutItem from "../../ItemCalloutItem"; // plasmic-import: ntQQTfdTjzvC/component
import { useScreenVariants as useScreenVariantsdjBtUr72ZExV } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: DJBtUr72ZExV/globalVariant
import "@plasmicapp/react-web/lib/plasmic.css";
import plasmic_antd_5_hostless_css from "../antd_5_hostless/plasmic.module.css"; // plasmic-import: ohDidvG9XsCeFumugENU3J/projectcss
import plasmic_plasmic_rich_components_css from "../plasmic_rich_components/plasmic.module.css"; // plasmic-import: jkU633o1Cz7HrJdwdxhVHk/projectcss
import projectcss from "./plasmic.module.css"; // plasmic-import: 34tvEQuyqfK98iGCjMbawB/projectcss
import sty from "./PlasmicSectionCmeMocSection.module.css"; // plasmic-import: QQidogip4Svc/css

createPlasmicElementProxy;

export const PlasmicSectionCmeMocSection__VariantProps = new Array();

export const PlasmicSectionCmeMocSection__ArgProps = new Array();

const $$ = {};

function useNextRouter() {
  try {
    return useRouter();
  } catch {}
  return undefined;
}

function PlasmicSectionCmeMocSection__RenderFunc(props) {
  const { variants, overrides, forNode } = props;
  const args = React.useMemo(
    () =>
      Object.assign(
        {},
        Object.fromEntries(
          Object.entries(props.args).filter(([_, v]) => v !== undefined)
        )
      ),
    [props.args]
  );
  const $props = {
    ...args,
    ...variants
  };
  const __nextRouter = useNextRouter();
  const $ctx = useDataEnv?.() || {};
  const refsRef = React.useRef({});
  const $refs = refsRef.current;
  let [$queries, setDollarQueries] = React.useState({});
  const stateSpecs = React.useMemo(
    () => [
      {
        path: "cmeMocChildLinks",
        type: "private",
        variableType: "array",
        initFunc: ({ $props, $state, $queries, $ctx }) =>
          (() => {
            try {
              return (() => {
                const entryMap = Object.fromEntries(
                  $queries.getCmemocLinks.data.response.includes.Entry.map(
                    entry => [entry.sys.id, entry]
                  )
                );
                return $queries.getCmemocLinks.data.response.items[0].fields.childLinks
                  .map(link => {
                    const entry = entryMap[link.sys.id];
                    return {
                      id: link.sys.id,
                      label: entry?.fields.label || "Label missing",
                      order: entry?.fields.order ?? 0,
                      column: entry?.fields.column ?? 0,
                      url: entry?.fields.url || "#",
                      showExternalIcon: entry?.fields.showExternalIcon || false
                    };
                  })
                  .sort((a, b) => a.order - b.order);
              })();
            } catch (e) {
              if (
                e instanceof TypeError ||
                e?.plasmicType === "PlasmicUndefinedDataError"
              ) {
                return [];
              }
              throw e;
            }
          })()
      },
      {
        path: "educationLinks",
        type: "private",
        variableType: "array",
        initFunc: ({ $props, $state, $queries, $ctx }) =>
          (() => {
            try {
              return (() => {
                const entryMap = Object.fromEntries(
                  $queries.getEducationLinks.data.response.includes.Entry.map(
                    entry => [entry.sys.id, entry]
                  )
                );
                return $queries.getEducationLinks.data.response.items[0].fields.childLinks
                  .map(link => {
                    const entry = entryMap[link.sys.id];
                    return {
                      id: link.sys.id,
                      label: entry?.fields.label || "Label missing",
                      order: Number(entry?.fields.order) || 0,
                      column: entry?.fields.column ?? 0,
                      url: entry?.fields.url || "#",
                      showExternalIcon: entry?.fields.showExternalIcon || false,
                      subText: entry?.fields.subText || ""
                    };
                  })
                  .sort((a, b) => a.order - b.order);
              })();
            } catch (e) {
              if (
                e instanceof TypeError ||
                e?.plasmicType === "PlasmicUndefinedDataError"
              ) {
                return [];
              }
              throw e;
            }
          })()
      }
    ],

    [$props, $ctx, $refs]
  );
  const $state = useDollarState(stateSpecs, {
    $props,
    $ctx,
    $queries: $queries,
    $refs
  });
  const new$Queries = {
    getCmemocLinks: usePlasmicDataOp(() => {
      return {
        sourceId: "tbVV8SR67UpQ6Z9zuPcDPB",
        opId: "fade47be-c763-4db0-b522-572147a29f6d",
        userArgs: {},
        cacheKey: `plasmic.$.fade47be-c763-4db0-b522-572147a29f6d.$.`,
        invalidatedKeys: null,
        roleId: null
      };
    }),
    getEducationLinks: usePlasmicDataOp(() => {
      return {
        sourceId: "tbVV8SR67UpQ6Z9zuPcDPB",
        opId: "ec0289a9-9a88-4848-9d68-3e4e03d22b2d",
        userArgs: {},
        cacheKey: `plasmic.$.ec0289a9-9a88-4848-9d68-3e4e03d22b2d.$.`,
        invalidatedKeys: null,
        roleId: null
      };
    })
  };
  if (Object.keys(new$Queries).some(k => new$Queries[k] !== $queries[k])) {
    setDollarQueries(new$Queries);
    $queries = new$Queries;
  }
  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariantsdjBtUr72ZExV()
  });
  return (
    <div
      data-plasmic-name={"root"}
      data-plasmic-override={overrides.root}
      data-plasmic-root={true}
      data-plasmic-for-node={forNode}
      className={classNames(
        projectcss.all,
        projectcss.root_reset,
        projectcss.plasmic_default_styles,
        projectcss.plasmic_mixins,
        projectcss.plasmic_tokens,
        plasmic_antd_5_hostless_css.plasmic_tokens,
        plasmic_plasmic_rich_components_css.plasmic_tokens,
        sty.root
      )}
    >
      <div className={classNames(projectcss.all, sty.freeBox__zvCPt)}>
        <Stack__
          as={"div"}
          data-plasmic-name={"section10"}
          data-plasmic-override={overrides.section10}
          hasGap={true}
          className={classNames(projectcss.all, sty.section10)}
        >
          <Stack__
            as={"div"}
            data-plasmic-name={"frame2"}
            data-plasmic-override={overrides.frame2}
            hasGap={true}
            className={classNames(projectcss.all, sty.frame2)}
          >
            <ItemSectionTitleDescriptionItem
              data-plasmic-name={"itemSectionTitleDescriptionItem"}
              data-plasmic-override={overrides.itemSectionTitleDescriptionItem}
              className={classNames(
                "__wab_instance",
                sty.itemSectionTitleDescriptionItem
              )}
              descriptionSection={(() => {
                try {
                  return $queries.getCmemocLinks.data.response.items[0].fields
                    .subText;
                } catch (e) {
                  if (
                    e instanceof TypeError ||
                    e?.plasmicType === "PlasmicUndefinedDataError"
                  ) {
                    return undefined;
                  }
                  throw e;
                }
              })()}
              title={(() => {
                try {
                  return $queries.getCmemocLinks.data.response.items[0].fields
                    .label;
                } catch (e) {
                  if (
                    e instanceof TypeError ||
                    e?.plasmicType === "PlasmicUndefinedDataError"
                  ) {
                    return undefined;
                  }
                  throw e;
                }
              })()}
            />
          </Stack__>
          <Stack__
            as={"div"}
            data-plasmic-name={"frame4"}
            data-plasmic-override={overrides.frame4}
            hasGap={true}
            className={classNames(projectcss.all, sty.frame4)}
          >
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.columns__yhaLl)}
            >
              {(_par => (!_par ? [] : Array.isArray(_par) ? _par : [_par]))(
                (() => {
                  try {
                    return $state.cmeMocChildLinks;
                  } catch (e) {
                    if (
                      e instanceof TypeError ||
                      e?.plasmicType === "PlasmicUndefinedDataError"
                    ) {
                      return [];
                    }
                    throw e;
                  }
                })()
              ).map((__plasmic_item_0, __plasmic_idx_0) => {
                const currentItem = __plasmic_item_0;
                const currentIndex = __plasmic_idx_0;
                return (
                  <div
                    className={classNames(projectcss.all, sty.column__glO8J)}
                    key={currentIndex}
                  >
                    <ItemExternalLinkCardItem
                      data-plasmic-name={"itemExternalLinkCardItem"}
                      data-plasmic-override={overrides.itemExternalLinkCardItem}
                      articleTitle={(() => {
                        try {
                          return currentItem.label;
                        } catch (e) {
                          if (
                            e instanceof TypeError ||
                            e?.plasmicType === "PlasmicUndefinedDataError"
                          ) {
                            return undefined;
                          }
                          throw e;
                        }
                      })()}
                      className={classNames(
                        "__wab_instance",
                        sty.itemExternalLinkCardItem
                      )}
                      iconImageId={``}
                      linkUrl={(() => {
                        try {
                          return currentItem.url;
                        } catch (e) {
                          if (
                            e instanceof TypeError ||
                            e?.plasmicType === "PlasmicUndefinedDataError"
                          ) {
                            return undefined;
                          }
                          throw e;
                        }
                      })()}
                      showIcon={(() => {
                        try {
                          return currentItem.showExternalIcon;
                        } catch (e) {
                          if (
                            e instanceof TypeError ||
                            e?.plasmicType === "PlasmicUndefinedDataError"
                          ) {
                            return false;
                          }
                          throw e;
                        }
                      })()}
                    />
                  </div>
                );
              })}
              <div className={classNames(projectcss.all, sty.column__k437)} />
              <div className={classNames(projectcss.all, sty.column___8Fai7)} />
            </Stack__>
          </Stack__>
          <Stack__
            as={"div"}
            data-plasmic-name={"calloutBar"}
            data-plasmic-override={overrides.calloutBar}
            hasGap={true}
            className={classNames(projectcss.all, sty.calloutBar)}
          >
            <div
              data-plasmic-name={"text"}
              data-plasmic-override={overrides.text}
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text
              )}
            >
              <React.Fragment>
                {(() => {
                  try {
                    return $queries.getEducationLinks.data.response.items[0]
                      .fields.label;
                  } catch (e) {
                    if (
                      e instanceof TypeError ||
                      e?.plasmicType === "PlasmicUndefinedDataError"
                    ) {
                      return "ASSH Education";
                    }
                    throw e;
                  }
                })()}
              </React.Fragment>
            </div>
            <div className={classNames(projectcss.all, sty.freeBox__hnpaT)}>
              <div className={classNames(projectcss.all, sty.columns__qByit)}>
                <div className={classNames(projectcss.all, sty.column__gaUsS)}>
                  <ItemCalloutItem
                    className={classNames(
                      "__wab_instance",
                      sty.itemCalloutItem__vbNE
                    )}
                    desc={(() => {
                      try {
                        return $state.educationLinks[0].subText;
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return undefined;
                        }
                        throw e;
                      }
                    })()}
                    linkUrl={(() => {
                      try {
                        return $state.educationLinks[0].url;
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return undefined;
                        }
                        throw e;
                      }
                    })()}
                    name={(() => {
                      try {
                        return $state.educationLinks[0].label;
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return undefined;
                        }
                        throw e;
                      }
                    })()}
                  />
                </div>
                <div className={classNames(projectcss.all, sty.column__jw77J)}>
                  <ItemCalloutItem
                    className={classNames(
                      "__wab_instance",
                      sty.itemCalloutItem__nWTs5
                    )}
                    desc={(() => {
                      try {
                        return $state.educationLinks[1].subText;
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return undefined;
                        }
                        throw e;
                      }
                    })()}
                    linkUrl={(() => {
                      try {
                        return $state.educationLinks[1].url;
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return undefined;
                        }
                        throw e;
                      }
                    })()}
                    name={(() => {
                      try {
                        return $state.educationLinks[1].label;
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return undefined;
                        }
                        throw e;
                      }
                    })()}
                  />
                </div>
                <div className={classNames(projectcss.all, sty.column__uhdu)}>
                  <ItemCalloutItem
                    className={classNames(
                      "__wab_instance",
                      sty.itemCalloutItem___3HGo9
                    )}
                    desc={(() => {
                      try {
                        return $state.educationLinks[2].subText;
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return undefined;
                        }
                        throw e;
                      }
                    })()}
                    linkUrl={(() => {
                      try {
                        return $state.educationLinks[2].url;
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return undefined;
                        }
                        throw e;
                      }
                    })()}
                    name={(() => {
                      try {
                        return $state.educationLinks[2].label;
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return undefined;
                        }
                        throw e;
                      }
                    })()}
                  />
                </div>
                <div className={classNames(projectcss.all, sty.column__zOIcY)}>
                  <ItemCalloutItem
                    className={classNames(
                      "__wab_instance",
                      sty.itemCalloutItem___47Qa2
                    )}
                    desc={(() => {
                      try {
                        return $state.educationLinks[3].subText;
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return undefined;
                        }
                        throw e;
                      }
                    })()}
                    linkUrl={(() => {
                      try {
                        return $state.educationLinks[3].url;
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return undefined;
                        }
                        throw e;
                      }
                    })()}
                    name={(() => {
                      try {
                        return $state.educationLinks[3].label;
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return undefined;
                        }
                        throw e;
                      }
                    })()}
                  />
                </div>
              </div>
              <div className={classNames(projectcss.all, sty.columns__bNcsV)}>
                <div className={classNames(projectcss.all, sty.column__ntqNp)}>
                  <ItemCalloutItem
                    className={classNames(
                      "__wab_instance",
                      sty.itemCalloutItem___9LXy5
                    )}
                    desc={(() => {
                      try {
                        return $state.educationLinks[4].subText;
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return undefined;
                        }
                        throw e;
                      }
                    })()}
                    linkUrl={(() => {
                      try {
                        return $state.educationLinks[4].url;
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return undefined;
                        }
                        throw e;
                      }
                    })()}
                    name={(() => {
                      try {
                        return $state.educationLinks[4].label;
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return undefined;
                        }
                        throw e;
                      }
                    })()}
                  />
                </div>
                <div className={classNames(projectcss.all, sty.column__wAMa)}>
                  <ItemCalloutItem
                    className={classNames(
                      "__wab_instance",
                      sty.itemCalloutItem__aoKFy
                    )}
                    desc={(() => {
                      try {
                        return $state.educationLinks[5].subText;
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return undefined;
                        }
                        throw e;
                      }
                    })()}
                    linkUrl={(() => {
                      try {
                        return $state.educationLinks[5].url;
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return undefined;
                        }
                        throw e;
                      }
                    })()}
                    name={(() => {
                      try {
                        return $state.educationLinks[5].label;
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return undefined;
                        }
                        throw e;
                      }
                    })()}
                  />
                </div>
                <div className={classNames(projectcss.all, sty.column__j0Qn6)}>
                  <ItemCalloutItem
                    className={classNames(
                      "__wab_instance",
                      sty.itemCalloutItem__rRuCe
                    )}
                    desc={(() => {
                      try {
                        return $state.educationLinks[6].subText;
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return undefined;
                        }
                        throw e;
                      }
                    })()}
                    linkUrl={(() => {
                      try {
                        return $state.educationLinks[6].url;
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return undefined;
                        }
                        throw e;
                      }
                    })()}
                    name={(() => {
                      try {
                        return $state.educationLinks[6].label;
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return undefined;
                        }
                        throw e;
                      }
                    })()}
                  />
                </div>
                <div className={classNames(projectcss.all, sty.column__i2ID)}>
                  <ItemCalloutItem
                    className={classNames(
                      "__wab_instance",
                      sty.itemCalloutItem__x18Yv
                    )}
                    desc={(() => {
                      try {
                        return $state.educationLinks[7].subText;
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return undefined;
                        }
                        throw e;
                      }
                    })()}
                    linkUrl={(() => {
                      try {
                        return $state.educationLinks[7].url;
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return undefined;
                        }
                        throw e;
                      }
                    })()}
                    name={(() => {
                      try {
                        return $state.educationLinks[7].label;
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return undefined;
                        }
                        throw e;
                      }
                    })()}
                  />
                </div>
              </div>
            </div>
          </Stack__>
        </Stack__>
      </div>
    </div>
  );
}

const PlasmicDescendants = {
  root: [
    "root",
    "section10",
    "frame2",
    "itemSectionTitleDescriptionItem",
    "frame4",
    "itemExternalLinkCardItem",
    "calloutBar",
    "text"
  ],

  section10: [
    "section10",
    "frame2",
    "itemSectionTitleDescriptionItem",
    "frame4",
    "itemExternalLinkCardItem",
    "calloutBar",
    "text"
  ],

  frame2: ["frame2", "itemSectionTitleDescriptionItem"],
  itemSectionTitleDescriptionItem: ["itemSectionTitleDescriptionItem"],
  frame4: ["frame4", "itemExternalLinkCardItem"],
  itemExternalLinkCardItem: ["itemExternalLinkCardItem"],
  calloutBar: ["calloutBar", "text"],
  text: ["text"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: PlasmicDescendants[nodeName],
          internalArgPropNames: PlasmicSectionCmeMocSection__ArgProps,
          internalVariantPropNames: PlasmicSectionCmeMocSection__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicSectionCmeMocSection__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicSectionCmeMocSection";
  } else {
    func.displayName = `PlasmicSectionCmeMocSection.${nodeName}`;
  }
  return func;
}

export const PlasmicSectionCmeMocSection = Object.assign(
  // Top-level PlasmicSectionCmeMocSection renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    section10: makeNodeComponent("section10"),
    frame2: makeNodeComponent("frame2"),
    itemSectionTitleDescriptionItem: makeNodeComponent(
      "itemSectionTitleDescriptionItem"
    ),
    frame4: makeNodeComponent("frame4"),
    itemExternalLinkCardItem: makeNodeComponent("itemExternalLinkCardItem"),
    calloutBar: makeNodeComponent("calloutBar"),
    text: makeNodeComponent("text"),
    // Metadata about props expected for PlasmicSectionCmeMocSection
    internalVariantProps: PlasmicSectionCmeMocSection__VariantProps,
    internalArgProps: PlasmicSectionCmeMocSection__ArgProps
  }
);

export default PlasmicSectionCmeMocSection;
/* prettier-ignore-end */
