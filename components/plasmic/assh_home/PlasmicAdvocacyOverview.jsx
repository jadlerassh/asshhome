/* eslint-disable */
/* tslint:disable */
// @ts-nocheck
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: 34tvEQuyqfK98iGCjMbawB
// Component: 9Gl1zMekNuhO
import * as React from "react";
import Head from "next/head";
import { useRouter } from "next/router";
import {
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  generateStateOnChangeProp,
  generateStateValueProp,
  useDollarState
} from "@plasmicapp/react-web";
import { useDataEnv } from "@plasmicapp/react-web/lib/host";
import SectionHomeMenuSection from "../../SectionHomeMenuSection"; // plasmic-import: HrBwnQh3XfKO/component
import SectionAdPlaceholder from "../../SectionAdPlaceholder"; // plasmic-import: MWRaB-Trol6D/component
import SectionInternalHeroTitleSectionV2 from "../../SectionInternalHeroTitleSectionV2"; // plasmic-import: xL1xlGlXhY87/component
import ItemSectionTitleDescriptionItem from "../../ItemSectionTitleDescriptionItem"; // plasmic-import: jaOmCC9X_Oxf/component
import HtmlContentfulHtmlLoader from "../../HtmlContentfulHtmlLoader"; // plasmic-import: yo4cxXaLxoOm/component
import BlockArticleCardList from "../../BlockArticleCardList"; // plasmic-import: HfgRxg6hxFsA/component
import SectionMidPageHighlightCtaSection from "../../SectionMidPageHighlightCtaSection"; // plasmic-import: yV5r8KM9AbUW/component
import SectionQuicklinksTable from "../../SectionQuicklinksTable"; // plasmic-import: dzBXgCr_C9up/component
import BlockAsshMissionBlueBlock from "../../BlockAsshMissionBlueBlock"; // plasmic-import: oMTPDeBb_fES/component
import SectionFooterSection from "../../SectionFooterSection"; // plasmic-import: l_IC-pMZ1T4O/component
import "@plasmicapp/react-web/lib/plasmic.css";
import plasmic_antd_5_hostless_css from "../antd_5_hostless/plasmic.module.css"; // plasmic-import: ohDidvG9XsCeFumugENU3J/projectcss
import plasmic_plasmic_rich_components_css from "../plasmic_rich_components/plasmic.module.css"; // plasmic-import: jkU633o1Cz7HrJdwdxhVHk/projectcss
import projectcss from "./plasmic.module.css"; // plasmic-import: 34tvEQuyqfK98iGCjMbawB/projectcss
import sty from "./PlasmicAdvocacyOverview.module.css"; // plasmic-import: 9Gl1zMekNuhO/css

createPlasmicElementProxy;

export const PlasmicAdvocacyOverview__VariantProps = new Array();

export const PlasmicAdvocacyOverview__ArgProps = new Array();

const $$ = {};

function useNextRouter() {
  try {
    return useRouter();
  } catch {}
  return undefined;
}

function PlasmicAdvocacyOverview__RenderFunc(props) {
  const { variants, overrides, forNode } = props;
  const args = React.useMemo(
    () =>
      Object.assign(
        {},
        Object.fromEntries(
          Object.entries(props.args).filter(([_, v]) => v !== undefined)
        )
      ),
    [props.args]
  );
  const $props = {
    ...args,
    ...variants
  };
  const __nextRouter = useNextRouter();
  const $ctx = useDataEnv?.() || {};
  const refsRef = React.useRef({});
  const $refs = refsRef.current;
  const stateSpecs = React.useMemo(
    () => [
      {
        path: "sectionHomeMenuSection.openDropdown",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => "allclosed"
      }
    ],

    [$props, $ctx, $refs]
  );
  const $state = useDollarState(stateSpecs, {
    $props,
    $ctx,
    $queries: {},
    $refs
  });
  return (
    <React.Fragment>
      <Head>
        <meta name="twitter:card" content="summary" />
        <title key="title">{PlasmicAdvocacyOverview.pageMetadata.title}</title>
        <meta
          key="og:title"
          property="og:title"
          content={PlasmicAdvocacyOverview.pageMetadata.title}
        />

        <meta
          key="twitter:title"
          name="twitter:title"
          content={PlasmicAdvocacyOverview.pageMetadata.title}
        />
      </Head>

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            projectcss.plasmic_tokens,
            plasmic_antd_5_hostless_css.plasmic_tokens,
            plasmic_plasmic_rich_components_css.plasmic_tokens,
            sty.root
          )}
        >
          <SectionHomeMenuSection
            data-plasmic-name={"sectionHomeMenuSection"}
            data-plasmic-override={overrides.sectionHomeMenuSection}
            className={classNames("__wab_instance", sty.sectionHomeMenuSection)}
            onOpenDropdownChange={async (...eventArgs) => {
              generateStateOnChangeProp($state, [
                "sectionHomeMenuSection",
                "openDropdown"
              ]).apply(null, eventArgs);
              if (
                eventArgs.length > 1 &&
                eventArgs[1] &&
                eventArgs[1]._plasmic_state_init_
              ) {
                return;
              }
            }}
            openDropdown={generateStateValueProp($state, [
              "sectionHomeMenuSection",
              "openDropdown"
            ])}
          />

          <SectionAdPlaceholder
            className={classNames(
              "__wab_instance",
              sty.sectionAdPlaceholder__rnRcj
            )}
          />

          <SectionInternalHeroTitleSectionV2
            data-plasmic-name={"sectionInternalHeroTitleSectionV2"}
            data-plasmic-override={overrides.sectionInternalHeroTitleSectionV2}
            className={classNames(
              "__wab_instance",
              sty.sectionInternalHeroTitleSectionV2
            )}
          />

          <div
            data-plasmic-name={"freeBox"}
            data-plasmic-override={overrides.freeBox}
            className={classNames(projectcss.all, sty.freeBox)}
          >
            <ItemSectionTitleDescriptionItem
              data-plasmic-name={"itemSectionTitleDescriptionItem"}
              data-plasmic-override={overrides.itemSectionTitleDescriptionItem}
              className={classNames(
                "__wab_instance",
                sty.itemSectionTitleDescriptionItem
              )}
              descriptionSection={``}
              title={"Supporting the Hand Surgeon Community"}
            />

            <div
              data-plasmic-name={"columns"}
              data-plasmic-override={overrides.columns}
              className={classNames(projectcss.all, sty.columns)}
            >
              <div
                data-plasmic-name={"column"}
                data-plasmic-override={overrides.column}
                className={classNames(projectcss.all, sty.column)}
              >
                <HtmlContentfulHtmlLoader
                  data-plasmic-name={"htmlContentfulHtmlLoader"}
                  data-plasmic-override={overrides.htmlContentfulHtmlLoader}
                  className={classNames(
                    "__wab_instance",
                    sty.htmlContentfulHtmlLoader
                  )}
                  title={"How ASSH Helps Patients"}
                />
              </div>
            </div>
          </div>
          <BlockArticleCardList
            className={classNames(
              "__wab_instance",
              sty.blockArticleCardList__tjuFi
            )}
          />

          <SectionMidPageHighlightCtaSection
            data-plasmic-name={"sectionMidPageHighlightCtaSection"}
            data-plasmic-override={overrides.sectionMidPageHighlightCtaSection}
            className={classNames(
              "__wab_instance",
              sty.sectionMidPageHighlightCtaSection
            )}
          />

          <BlockArticleCardList
            className={classNames(
              "__wab_instance",
              sty.blockArticleCardList__dUIcu
            )}
            name={"Advocacy: News & Updates Links"}
          />

          <SectionQuicklinksTable
            data-plasmic-name={"sectionQuicklinksTable"}
            data-plasmic-override={overrides.sectionQuicklinksTable}
            className={classNames("__wab_instance", sty.sectionQuicklinksTable)}
            columns={"_3Column"}
            name={"Advocacy Quicklinks"}
          />

          <SectionAdPlaceholder
            className={classNames(
              "__wab_instance",
              sty.sectionAdPlaceholder__qkbtr
            )}
          />

          <BlockAsshMissionBlueBlock
            data-plasmic-name={"blockAsshMissionBlueBlock"}
            data-plasmic-override={overrides.blockAsshMissionBlueBlock}
            className={classNames(
              "__wab_instance",
              sty.blockAsshMissionBlueBlock
            )}
          />

          <SectionFooterSection
            data-plasmic-name={"sectionFooterSection"}
            data-plasmic-override={overrides.sectionFooterSection}
            className={classNames("__wab_instance", sty.sectionFooterSection)}
          />
        </div>
      </div>
    </React.Fragment>
  );
}

const PlasmicDescendants = {
  root: [
    "root",
    "sectionHomeMenuSection",
    "sectionInternalHeroTitleSectionV2",
    "freeBox",
    "itemSectionTitleDescriptionItem",
    "columns",
    "column",
    "htmlContentfulHtmlLoader",
    "sectionMidPageHighlightCtaSection",
    "sectionQuicklinksTable",
    "blockAsshMissionBlueBlock",
    "sectionFooterSection"
  ],

  sectionHomeMenuSection: ["sectionHomeMenuSection"],
  sectionInternalHeroTitleSectionV2: ["sectionInternalHeroTitleSectionV2"],
  freeBox: [
    "freeBox",
    "itemSectionTitleDescriptionItem",
    "columns",
    "column",
    "htmlContentfulHtmlLoader"
  ],

  itemSectionTitleDescriptionItem: ["itemSectionTitleDescriptionItem"],
  columns: ["columns", "column", "htmlContentfulHtmlLoader"],
  column: ["column", "htmlContentfulHtmlLoader"],
  htmlContentfulHtmlLoader: ["htmlContentfulHtmlLoader"],
  sectionMidPageHighlightCtaSection: ["sectionMidPageHighlightCtaSection"],
  sectionQuicklinksTable: ["sectionQuicklinksTable"],
  blockAsshMissionBlueBlock: ["blockAsshMissionBlueBlock"],
  sectionFooterSection: ["sectionFooterSection"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: PlasmicDescendants[nodeName],
          internalArgPropNames: PlasmicAdvocacyOverview__ArgProps,
          internalVariantPropNames: PlasmicAdvocacyOverview__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicAdvocacyOverview__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicAdvocacyOverview";
  } else {
    func.displayName = `PlasmicAdvocacyOverview.${nodeName}`;
  }
  return func;
}

export const PlasmicAdvocacyOverview = Object.assign(
  // Top-level PlasmicAdvocacyOverview renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    sectionHomeMenuSection: makeNodeComponent("sectionHomeMenuSection"),
    sectionInternalHeroTitleSectionV2: makeNodeComponent(
      "sectionInternalHeroTitleSectionV2"
    ),
    freeBox: makeNodeComponent("freeBox"),
    itemSectionTitleDescriptionItem: makeNodeComponent(
      "itemSectionTitleDescriptionItem"
    ),
    columns: makeNodeComponent("columns"),
    column: makeNodeComponent("column"),
    htmlContentfulHtmlLoader: makeNodeComponent("htmlContentfulHtmlLoader"),
    sectionMidPageHighlightCtaSection: makeNodeComponent(
      "sectionMidPageHighlightCtaSection"
    ),
    sectionQuicklinksTable: makeNodeComponent("sectionQuicklinksTable"),
    blockAsshMissionBlueBlock: makeNodeComponent("blockAsshMissionBlueBlock"),
    sectionFooterSection: makeNodeComponent("sectionFooterSection"),
    // Metadata about props expected for PlasmicAdvocacyOverview
    internalVariantProps: PlasmicAdvocacyOverview__VariantProps,
    internalArgProps: PlasmicAdvocacyOverview__ArgProps,
    // Page metadata
    pageMetadata: {
      title: "Advocacy Overview",
      description: "",
      ogImageSrc: "",
      canonical: ""
    }
  }
);

export default PlasmicAdvocacyOverview;
/* prettier-ignore-end */
