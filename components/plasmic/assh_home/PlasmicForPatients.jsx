/* eslint-disable */
/* tslint:disable */
// @ts-nocheck
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: 34tvEQuyqfK98iGCjMbawB
// Component: MLTXT8c5yXI2
import * as React from "react";
import Head from "next/head";
import { useRouter } from "next/router";
import {
  Stack as Stack__,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants,
  generateStateOnChangeProp,
  generateStateValueProp,
  useDollarState
} from "@plasmicapp/react-web";
import { useDataEnv } from "@plasmicapp/react-web/lib/host";
import SectionHomeMenuSection from "../../SectionHomeMenuSection"; // plasmic-import: HrBwnQh3XfKO/component
import SectionInternalHeroTitleSectionV2 from "../../SectionInternalHeroTitleSectionV2"; // plasmic-import: xL1xlGlXhY87/component
import ItemSectionTitleDescriptionItem from "../../ItemSectionTitleDescriptionItem"; // plasmic-import: jaOmCC9X_Oxf/component
import HtmlContentfulHtmlLoader from "../../HtmlContentfulHtmlLoader"; // plasmic-import: yo4cxXaLxoOm/component
import BlockQuoteBlock from "../../BlockQuoteBlock"; // plasmic-import: pkNfPBeJPFGR/component
import SectionMidPageHighlightCtaSection from "../../SectionMidPageHighlightCtaSection"; // plasmic-import: yV5r8KM9AbUW/component
import ButtonPrimary from "../../ButtonPrimary"; // plasmic-import: -2HqLDJqJBwh/component
import ItemArticleCardItemWithDescription from "../../ItemArticleCardItemWithDescription"; // plasmic-import: m6xY8jJvNbEQ/component
import BlockPublicationHIghlight from "../../BlockPublicationHIghlight"; // plasmic-import: UkJ-zcT0QvMv/component
import SectionAdPlaceholder from "../../SectionAdPlaceholder"; // plasmic-import: MWRaB-Trol6D/component
import BlockAsshMissionBlueBlock from "../../BlockAsshMissionBlueBlock"; // plasmic-import: oMTPDeBb_fES/component
import SectionFooterSection from "../../SectionFooterSection"; // plasmic-import: l_IC-pMZ1T4O/component
import { useScreenVariants as useScreenVariantsdjBtUr72ZExV } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: DJBtUr72ZExV/globalVariant
import "@plasmicapp/react-web/lib/plasmic.css";
import plasmic_antd_5_hostless_css from "../antd_5_hostless/plasmic.module.css"; // plasmic-import: ohDidvG9XsCeFumugENU3J/projectcss
import plasmic_plasmic_rich_components_css from "../plasmic_rich_components/plasmic.module.css"; // plasmic-import: jkU633o1Cz7HrJdwdxhVHk/projectcss
import projectcss from "./plasmic.module.css"; // plasmic-import: 34tvEQuyqfK98iGCjMbawB/projectcss
import sty from "./PlasmicForPatients.module.css"; // plasmic-import: MLTXT8c5yXI2/css

createPlasmicElementProxy;

export const PlasmicForPatients__VariantProps = new Array();

export const PlasmicForPatients__ArgProps = new Array();

const $$ = {};

function useNextRouter() {
  try {
    return useRouter();
  } catch {}
  return undefined;
}

function PlasmicForPatients__RenderFunc(props) {
  const { variants, overrides, forNode } = props;
  const args = React.useMemo(
    () =>
      Object.assign(
        {},
        Object.fromEntries(
          Object.entries(props.args).filter(([_, v]) => v !== undefined)
        )
      ),
    [props.args]
  );
  const $props = {
    ...args,
    ...variants
  };
  const __nextRouter = useNextRouter();
  const $ctx = useDataEnv?.() || {};
  const refsRef = React.useRef({});
  const $refs = refsRef.current;
  const stateSpecs = React.useMemo(
    () => [
      {
        path: "sectionHomeMenuSection.openDropdown",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => "allclosed"
      }
    ],

    [$props, $ctx, $refs]
  );
  const $state = useDollarState(stateSpecs, {
    $props,
    $ctx,
    $queries: {},
    $refs
  });
  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariantsdjBtUr72ZExV()
  });
  return (
    <React.Fragment>
      <Head>
        <meta name="twitter:card" content="summary" />
        <title key="title">{PlasmicForPatients.pageMetadata.title}</title>
        <meta
          key="og:title"
          property="og:title"
          content={PlasmicForPatients.pageMetadata.title}
        />

        <meta
          key="twitter:title"
          name="twitter:title"
          content={PlasmicForPatients.pageMetadata.title}
        />
      </Head>

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            projectcss.plasmic_tokens,
            plasmic_antd_5_hostless_css.plasmic_tokens,
            plasmic_plasmic_rich_components_css.plasmic_tokens,
            sty.root
          )}
        >
          <SectionHomeMenuSection
            data-plasmic-name={"sectionHomeMenuSection"}
            data-plasmic-override={overrides.sectionHomeMenuSection}
            className={classNames("__wab_instance", sty.sectionHomeMenuSection)}
            onOpenDropdownChange={async (...eventArgs) => {
              generateStateOnChangeProp($state, [
                "sectionHomeMenuSection",
                "openDropdown"
              ]).apply(null, eventArgs);
              if (
                eventArgs.length > 1 &&
                eventArgs[1] &&
                eventArgs[1]._plasmic_state_init_
              ) {
                return;
              }
            }}
            openDropdown={generateStateValueProp($state, [
              "sectionHomeMenuSection",
              "openDropdown"
            ])}
          />

          <SectionInternalHeroTitleSectionV2
            data-plasmic-name={"sectionInternalHeroTitleSectionV2"}
            data-plasmic-override={overrides.sectionInternalHeroTitleSectionV2}
            className={classNames(
              "__wab_instance",
              sty.sectionInternalHeroTitleSectionV2
            )}
          />

          <ItemSectionTitleDescriptionItem
            data-plasmic-name={"itemSectionTitleDescriptionItem"}
            data-plasmic-override={overrides.itemSectionTitleDescriptionItem}
            className={classNames(
              "__wab_instance",
              sty.itemSectionTitleDescriptionItem
            )}
            descriptionSection={
              "The American Society for Surgery of the Hand (ASSH) helps patients in several key ways, primarily by advancing the science and practice of hand and upper extremity surgery through education, research, and advocacy. "
            }
            title={"How ASSH Helps Patients"}
          />

          <div className={classNames(projectcss.all, sty.columns__nlUcV)}>
            <div className={classNames(projectcss.all, sty.column___2AzTg)}>
              <HtmlContentfulHtmlLoader
                data-plasmic-name={"htmlContentfulHtmlLoader"}
                data-plasmic-override={overrides.htmlContentfulHtmlLoader}
                className={classNames(
                  "__wab_instance",
                  sty.htmlContentfulHtmlLoader
                )}
                title={"How ASSH Helps Patients"}
              />
            </div>
            <div className={classNames(projectcss.all, sty.column___7TL5)}>
              <BlockQuoteBlock
                data-plasmic-name={"blockQuoteBlock"}
                data-plasmic-override={overrides.blockQuoteBlock}
                className={classNames("__wab_instance", sty.blockQuoteBlock)}
                name={"ASSH For Patients Quote"}
                quote={"singleLine"}
              />
            </div>
          </div>
          <SectionMidPageHighlightCtaSection
            data-plasmic-name={"sectionMidPageHighlightCtaSection"}
            data-plasmic-override={overrides.sectionMidPageHighlightCtaSection}
            className={classNames(
              "__wab_instance",
              sty.sectionMidPageHighlightCtaSection
            )}
          />

          <Stack__
            as={"div"}
            hasGap={true}
            className={classNames(projectcss.all, sty.columns__rhD7)}
          >
            <div className={classNames(projectcss.all, sty.column__jkgyB)}>
              <Stack__
                as={"div"}
                data-plasmic-name={"content"}
                data-plasmic-override={overrides.content}
                hasGap={true}
                className={classNames(projectcss.all, sty.content)}
              >
                <div
                  data-plasmic-name={"text"}
                  data-plasmic-override={overrides.text}
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text
                  )}
                >
                  {"Handcare.org"}
                </div>
                <div
                  data-plasmic-name={"column"}
                  data-plasmic-override={overrides.column}
                  className={classNames(projectcss.all, sty.column)}
                />

                <div
                  data-plasmic-name={"description"}
                  data-plasmic-override={overrides.description}
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.description
                  )}
                >
                  {
                    "Learn about hand surgery and common conditions of the hand."
                  }
                </div>
                <ButtonPrimary
                  data-plasmic-name={"buttonPrimary"}
                  data-plasmic-override={overrides.buttonPrimary}
                  className={classNames("__wab_instance", sty.buttonPrimary)}
                  secondaryInteractions={"secondary"}
                  text={"Learn About Conditions"}
                />
              </Stack__>
            </div>
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.column__ebuyd)}
            >
              <ItemArticleCardItemWithDescription
                articleTitle={"Diseases & Conditions"}
                className={classNames(
                  "__wab_instance",
                  sty.itemArticleCardItemWithDescription__giNB
                )}
                description={
                  "Detailed information on common conditions like carpal tunnel syndrome, arthritis, fractures, and nerve injuries, as well as less common ones."
                }
                heading={"Resource"}
                linkUrl={"https://www.handcare.org"}
              />

              <ItemArticleCardItemWithDescription
                articleTitle={"About Hand Surgery and Hand Therapy"}
                className={classNames(
                  "__wab_instance",
                  sty.itemArticleCardItemWithDescription__keMsF
                )}
                description={
                  "Explanations of what these specialties entail and what patients can expect."
                }
                heading={"Resources"}
              />
            </Stack__>
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.column__gjB8B)}
            >
              <ItemArticleCardItemWithDescription
                articleTitle={"Hand Safety"}
                className={classNames(
                  "__wab_instance",
                  sty.itemArticleCardItemWithDescription__bEVdu
                )}
                description={"Tips and resources on preventing hand injuries."}
                heading={"Resources"}
              />

              <ItemArticleCardItemWithDescription
                articleTitle={"Anatomy"}
                className={classNames(
                  "__wab_instance",
                  sty.itemArticleCardItemWithDescription__jRklP
                )}
                description={
                  "Learn hand anatomy including bones, joints, muscles and more."
                }
                heading={"Resource"}
              />
            </Stack__>
          </Stack__>
          <BlockPublicationHIghlight
            data-plasmic-name={"blockPublicationHIghlight"}
            data-plasmic-override={overrides.blockPublicationHIghlight}
            className={classNames(
              "__wab_instance",
              sty.blockPublicationHIghlight
            )}
          />

          <SectionAdPlaceholder
            data-plasmic-name={"sectionAdPlaceholder"}
            data-plasmic-override={overrides.sectionAdPlaceholder}
            className={classNames("__wab_instance", sty.sectionAdPlaceholder)}
          />

          <BlockAsshMissionBlueBlock
            data-plasmic-name={"blockAsshMissionBlueBlock"}
            data-plasmic-override={overrides.blockAsshMissionBlueBlock}
            className={classNames(
              "__wab_instance",
              sty.blockAsshMissionBlueBlock
            )}
          />

          <SectionFooterSection
            data-plasmic-name={"sectionFooterSection"}
            data-plasmic-override={overrides.sectionFooterSection}
            className={classNames("__wab_instance", sty.sectionFooterSection)}
          />
        </div>
      </div>
    </React.Fragment>
  );
}

const PlasmicDescendants = {
  root: [
    "root",
    "sectionHomeMenuSection",
    "sectionInternalHeroTitleSectionV2",
    "itemSectionTitleDescriptionItem",
    "htmlContentfulHtmlLoader",
    "blockQuoteBlock",
    "sectionMidPageHighlightCtaSection",
    "content",
    "text",
    "column",
    "description",
    "buttonPrimary",
    "blockPublicationHIghlight",
    "sectionAdPlaceholder",
    "blockAsshMissionBlueBlock",
    "sectionFooterSection"
  ],

  sectionHomeMenuSection: ["sectionHomeMenuSection"],
  sectionInternalHeroTitleSectionV2: ["sectionInternalHeroTitleSectionV2"],
  itemSectionTitleDescriptionItem: ["itemSectionTitleDescriptionItem"],
  htmlContentfulHtmlLoader: ["htmlContentfulHtmlLoader"],
  blockQuoteBlock: ["blockQuoteBlock"],
  sectionMidPageHighlightCtaSection: ["sectionMidPageHighlightCtaSection"],
  content: ["content", "text", "column", "description", "buttonPrimary"],
  text: ["text"],
  column: ["column"],
  description: ["description"],
  buttonPrimary: ["buttonPrimary"],
  blockPublicationHIghlight: ["blockPublicationHIghlight"],
  sectionAdPlaceholder: ["sectionAdPlaceholder"],
  blockAsshMissionBlueBlock: ["blockAsshMissionBlueBlock"],
  sectionFooterSection: ["sectionFooterSection"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: PlasmicDescendants[nodeName],
          internalArgPropNames: PlasmicForPatients__ArgProps,
          internalVariantPropNames: PlasmicForPatients__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicForPatients__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicForPatients";
  } else {
    func.displayName = `PlasmicForPatients.${nodeName}`;
  }
  return func;
}

export const PlasmicForPatients = Object.assign(
  // Top-level PlasmicForPatients renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    sectionHomeMenuSection: makeNodeComponent("sectionHomeMenuSection"),
    sectionInternalHeroTitleSectionV2: makeNodeComponent(
      "sectionInternalHeroTitleSectionV2"
    ),
    itemSectionTitleDescriptionItem: makeNodeComponent(
      "itemSectionTitleDescriptionItem"
    ),
    htmlContentfulHtmlLoader: makeNodeComponent("htmlContentfulHtmlLoader"),
    blockQuoteBlock: makeNodeComponent("blockQuoteBlock"),
    sectionMidPageHighlightCtaSection: makeNodeComponent(
      "sectionMidPageHighlightCtaSection"
    ),
    content: makeNodeComponent("content"),
    text: makeNodeComponent("text"),
    column: makeNodeComponent("column"),
    description: makeNodeComponent("description"),
    buttonPrimary: makeNodeComponent("buttonPrimary"),
    blockPublicationHIghlight: makeNodeComponent("blockPublicationHIghlight"),
    sectionAdPlaceholder: makeNodeComponent("sectionAdPlaceholder"),
    blockAsshMissionBlueBlock: makeNodeComponent("blockAsshMissionBlueBlock"),
    sectionFooterSection: makeNodeComponent("sectionFooterSection"),
    // Metadata about props expected for PlasmicForPatients
    internalVariantProps: PlasmicForPatients__VariantProps,
    internalArgProps: PlasmicForPatients__ArgProps,
    // Page metadata
    pageMetadata: {
      title: "For Patients",
      description: "",
      ogImageSrc: "",
      canonical: ""
    }
  }
);

export default PlasmicForPatients;
/* prettier-ignore-end */
