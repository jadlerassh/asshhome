/* eslint-disable */
/* tslint:disable */
// @ts-nocheck
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: 34tvEQuyqfK98iGCjMbawB
// Component: xRdwj8GIe6Bj
import * as React from "react";
import Head from "next/head";
import { useRouter } from "next/router";
import {
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts
} from "@plasmicapp/react-web";
import { useDataEnv } from "@plasmicapp/react-web/lib/host";
import SectionHomeMenuSection from "../../SectionHomeMenuSection"; // plasmic-import: HrBwnQh3XfKO/component
import SectionHomeHeroBannerWithLinkItems from "../../SectionHomeHeroBannerWithLinkItems"; // plasmic-import: KrK4IjZZwAsd/component
import SectionInternalHeroTitleSectionV1 from "../../SectionInternalHeroTitleSectionV1"; // plasmic-import: 8dary0IReKTd/component
import SectionUpcomingCouresEventsSection from "../../SectionUpcomingCouresEventsSection"; // plasmic-import: aDAIm3T_wfOv/component
import "@plasmicapp/react-web/lib/plasmic.css";
import plasmic_antd_5_hostless_css from "../antd_5_hostless/plasmic.module.css"; // plasmic-import: ohDidvG9XsCeFumugENU3J/projectcss
import plasmic_plasmic_rich_components_css from "../plasmic_rich_components/plasmic.module.css"; // plasmic-import: jkU633o1Cz7HrJdwdxhVHk/projectcss
import projectcss from "./plasmic.module.css"; // plasmic-import: 34tvEQuyqfK98iGCjMbawB/projectcss
import sty from "./PlasmicInternalComponentList.module.css"; // plasmic-import: xRdwj8GIe6Bj/css

createPlasmicElementProxy;

export const PlasmicInternalComponentList__VariantProps = new Array();

export const PlasmicInternalComponentList__ArgProps = new Array();

const $$ = {};

function useNextRouter() {
  try {
    return useRouter();
  } catch {}
  return undefined;
}

function PlasmicInternalComponentList__RenderFunc(props) {
  const { variants, overrides, forNode } = props;
  const args = React.useMemo(
    () =>
      Object.assign(
        {},
        Object.fromEntries(
          Object.entries(props.args).filter(([_, v]) => v !== undefined)
        )
      ),
    [props.args]
  );
  const $props = {
    ...args,
    ...variants
  };
  const __nextRouter = useNextRouter();
  const $ctx = useDataEnv?.() || {};
  const refsRef = React.useRef({});
  const $refs = refsRef.current;
  return (
    <React.Fragment>
      <Head></Head>

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            projectcss.plasmic_tokens,
            plasmic_antd_5_hostless_css.plasmic_tokens,
            plasmic_plasmic_rich_components_css.plasmic_tokens,
            sty.root
          )}
        >
          <h1
            className={classNames(
              projectcss.all,
              projectcss.h1,
              projectcss.__wab_text,
              sty.h1__maZh4
            )}
          >
            {"SECTION: ASSH Home Menu"}
          </h1>
          <SectionHomeMenuSection
            data-plasmic-name={"sectionHomeMenuSection"}
            data-plasmic-override={overrides.sectionHomeMenuSection}
            className={classNames("__wab_instance", sty.sectionHomeMenuSection)}
          />

          <h1
            className={classNames(
              projectcss.all,
              projectcss.h1,
              projectcss.__wab_text,
              sty.h1__wkD96
            )}
          >
            {"SECTION: Hero with Links"}
          </h1>
          <SectionHomeHeroBannerWithLinkItems
            data-plasmic-name={"sectionHomeHeroBannerWithLinkItems"}
            data-plasmic-override={overrides.sectionHomeHeroBannerWithLinkItems}
            className={classNames(
              "__wab_instance",
              sty.sectionHomeHeroBannerWithLinkItems
            )}
          />

          <h1
            className={classNames(
              projectcss.all,
              projectcss.h1,
              projectcss.__wab_text,
              sty.h1__cifj1
            )}
          >
            {"SECTION: Title Bar"}
          </h1>
          <SectionInternalHeroTitleSectionV1
            data-plasmic-name={"sectionInternalHeroTitleSectionV1"}
            data-plasmic-override={overrides.sectionInternalHeroTitleSectionV1}
            className={classNames(
              "__wab_instance",
              sty.sectionInternalHeroTitleSectionV1
            )}
          />

          <h1
            className={classNames(
              projectcss.all,
              projectcss.h1,
              projectcss.__wab_text,
              sty.h1___4V11F
            )}
          >
            {"SECTION: Upcoming Events"}
          </h1>
          <SectionUpcomingCouresEventsSection
            data-plasmic-name={"sectionUpcomingCouresEventsSection"}
            data-plasmic-override={overrides.sectionUpcomingCouresEventsSection}
            className={classNames(
              "__wab_instance",
              sty.sectionUpcomingCouresEventsSection
            )}
          />
        </div>
      </div>
    </React.Fragment>
  );
}

const PlasmicDescendants = {
  root: [
    "root",
    "sectionHomeMenuSection",
    "sectionHomeHeroBannerWithLinkItems",
    "sectionInternalHeroTitleSectionV1",
    "sectionUpcomingCouresEventsSection"
  ],

  sectionHomeMenuSection: ["sectionHomeMenuSection"],
  sectionHomeHeroBannerWithLinkItems: ["sectionHomeHeroBannerWithLinkItems"],
  sectionInternalHeroTitleSectionV1: ["sectionInternalHeroTitleSectionV1"],
  sectionUpcomingCouresEventsSection: ["sectionUpcomingCouresEventsSection"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: PlasmicDescendants[nodeName],
          internalArgPropNames: PlasmicInternalComponentList__ArgProps,
          internalVariantPropNames: PlasmicInternalComponentList__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicInternalComponentList__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicInternalComponentList";
  } else {
    func.displayName = `PlasmicInternalComponentList.${nodeName}`;
  }
  return func;
}

export const PlasmicInternalComponentList = Object.assign(
  // Top-level PlasmicInternalComponentList renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    sectionHomeMenuSection: makeNodeComponent("sectionHomeMenuSection"),
    sectionHomeHeroBannerWithLinkItems: makeNodeComponent(
      "sectionHomeHeroBannerWithLinkItems"
    ),
    sectionInternalHeroTitleSectionV1: makeNodeComponent(
      "sectionInternalHeroTitleSectionV1"
    ),
    sectionUpcomingCouresEventsSection: makeNodeComponent(
      "sectionUpcomingCouresEventsSection"
    ),
    // Metadata about props expected for PlasmicInternalComponentList
    internalVariantProps: PlasmicInternalComponentList__VariantProps,
    internalArgProps: PlasmicInternalComponentList__ArgProps,
    // Page metadata
    pageMetadata: {
      title: "",
      description: "",
      ogImageSrc: "",
      canonical: ""
    }
  }
);

export default PlasmicInternalComponentList;
/* prettier-ignore-end */
