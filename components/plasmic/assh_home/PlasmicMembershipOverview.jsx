/* eslint-disable */
/* tslint:disable */
// @ts-nocheck
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: 34tvEQuyqfK98iGCjMbawB
// Component: rK90PZBlpTXX
import * as React from "react";
import Head from "next/head";
import { useRouter } from "next/router";
import {
  Stack as Stack__,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  generateStateOnChangeProp,
  generateStateValueProp,
  useDollarState
} from "@plasmicapp/react-web";
import { useDataEnv } from "@plasmicapp/react-web/lib/host";
import { usePlasmicDataOp } from "@plasmicapp/react-web/lib/data-sources";
import SectionHomeMenuSection from "../../SectionHomeMenuSection"; // plasmic-import: HrBwnQh3XfKO/component
import SectionInternalHeroTitleSectionV2 from "../../SectionInternalHeroTitleSectionV2"; // plasmic-import: xL1xlGlXhY87/component
import ItemSectionTitleDescriptionItem from "../../ItemSectionTitleDescriptionItem"; // plasmic-import: jaOmCC9X_Oxf/component
import HtmlContentfulHtmlLoader from "../../HtmlContentfulHtmlLoader"; // plasmic-import: yo4cxXaLxoOm/component
import ButtonPrimary from "../../ButtonPrimary"; // plasmic-import: -2HqLDJqJBwh/component
import ItemArticleCardItemWithDescription from "../../ItemArticleCardItemWithDescription"; // plasmic-import: m6xY8jJvNbEQ/component
import SectionMidPageCtaSection from "../../SectionMidPageCtaSection"; // plasmic-import: yV5r8KM9AbUW/component
import CardListMemberNewsWithDescription from "../../CardListMemberNewsWithDescription"; // plasmic-import: mj20sYUsPblw/component
import BlockQuicklinksTanBox from "../../BlockQuicklinksTanBox"; // plasmic-import: 58JBrSEW4yoW/component
import ItemAd from "../../ItemAd"; // plasmic-import: GN0Rszdi6Y-X/component
import BlockAsshMissionBlueBlock from "../../BlockAsshMissionBlueBlock"; // plasmic-import: oMTPDeBb_fES/component
import SectionFooterSection from "../../SectionFooterSection"; // plasmic-import: l_IC-pMZ1T4O/component
import "@plasmicapp/react-web/lib/plasmic.css";
import plasmic_antd_5_hostless_css from "../antd_5_hostless/plasmic.module.css"; // plasmic-import: ohDidvG9XsCeFumugENU3J/projectcss
import plasmic_plasmic_rich_components_css from "../plasmic_rich_components/plasmic.module.css"; // plasmic-import: jkU633o1Cz7HrJdwdxhVHk/projectcss
import projectcss from "./plasmic.module.css"; // plasmic-import: 34tvEQuyqfK98iGCjMbawB/projectcss
import sty from "./PlasmicMembershipOverview.module.css"; // plasmic-import: rK90PZBlpTXX/css

createPlasmicElementProxy;

export const PlasmicMembershipOverview__VariantProps = new Array();

export const PlasmicMembershipOverview__ArgProps = new Array();

const $$ = {};

function useNextRouter() {
  try {
    return useRouter();
  } catch {}
  return undefined;
}

function PlasmicMembershipOverview__RenderFunc(props) {
  const { variants, overrides, forNode } = props;
  const args = React.useMemo(
    () =>
      Object.assign(
        {},
        Object.fromEntries(
          Object.entries(props.args).filter(([_, v]) => v !== undefined)
        )
      ),
    [props.args]
  );
  const $props = {
    ...args,
    ...variants
  };
  const __nextRouter = useNextRouter();
  const $ctx = useDataEnv?.() || {};
  const refsRef = React.useRef({});
  const $refs = refsRef.current;
  let [$queries, setDollarQueries] = React.useState({});
  const stateSpecs = React.useMemo(
    () => [
      {
        path: "sectionHomeMenuSection.openDropdown",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => "allclosed"
      }
    ],

    [$props, $ctx, $refs]
  );
  const $state = useDollarState(stateSpecs, {
    $props,
    $ctx,
    $queries: $queries,
    $refs
  });
  const new$Queries = {
    getHtmlContent: usePlasmicDataOp(() => {
      return {
        sourceId: "tbVV8SR67UpQ6Z9zuPcDPB",
        opId: "1c149615-f3df-47e2-bfa6-e4016f34f365",
        userArgs: {},
        cacheKey: `plasmic.$.1c149615-f3df-47e2-bfa6-e4016f34f365.$.`,
        invalidatedKeys: null,
        roleId: null
      };
    })
  };
  if (Object.keys(new$Queries).some(k => new$Queries[k] !== $queries[k])) {
    setDollarQueries(new$Queries);
    $queries = new$Queries;
  }
  return (
    <React.Fragment>
      <Head>
        <meta name="twitter:card" content="summary" />
        <title key="title">
          {PlasmicMembershipOverview.pageMetadata.title}
        </title>
        <meta
          key="og:title"
          property="og:title"
          content={PlasmicMembershipOverview.pageMetadata.title}
        />

        <meta
          key="twitter:title"
          name="twitter:title"
          content={PlasmicMembershipOverview.pageMetadata.title}
        />

        <meta
          key="description"
          name="description"
          content={PlasmicMembershipOverview.pageMetadata.description}
        />

        <meta
          key="og:description"
          property="og:description"
          content={PlasmicMembershipOverview.pageMetadata.description}
        />

        <meta
          key="twitter:description"
          name="twitter:description"
          content={PlasmicMembershipOverview.pageMetadata.description}
        />
      </Head>

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            projectcss.plasmic_tokens,
            plasmic_antd_5_hostless_css.plasmic_tokens,
            plasmic_plasmic_rich_components_css.plasmic_tokens,
            sty.root
          )}
        >
          <SectionHomeMenuSection
            data-plasmic-name={"sectionHomeMenuSection"}
            data-plasmic-override={overrides.sectionHomeMenuSection}
            className={classNames("__wab_instance", sty.sectionHomeMenuSection)}
            onOpenDropdownChange={async (...eventArgs) => {
              generateStateOnChangeProp($state, [
                "sectionHomeMenuSection",
                "openDropdown"
              ]).apply(null, eventArgs);
              if (
                eventArgs.length > 1 &&
                eventArgs[1] &&
                eventArgs[1]._plasmic_state_init_
              ) {
                return;
              }
            }}
            openDropdown={generateStateValueProp($state, [
              "sectionHomeMenuSection",
              "openDropdown"
            ])}
          />

          <SectionInternalHeroTitleSectionV2
            data-plasmic-name={"sectionInternalHeroTitleSectionV2"}
            data-plasmic-override={overrides.sectionInternalHeroTitleSectionV2}
            className={classNames(
              "__wab_instance",
              sty.sectionInternalHeroTitleSectionV2
            )}
          />

          <ItemSectionTitleDescriptionItem
            className={classNames(
              "__wab_instance",
              sty.itemSectionTitleDescriptionItem__qrBMv
            )}
            descriptionSection={``}
            title={"Why Join ASSH?"}
          />

          <div className={classNames(projectcss.all, sty.freeBox___46LsI)}>
            <HtmlContentfulHtmlLoader
              className={classNames(
                "__wab_instance",
                sty.htmlContentfulHtmlLoader__adOak
              )}
              title={"Membership Overview - Why Join ASSH?"}
            />
          </div>
          <Stack__
            as={"div"}
            hasGap={true}
            className={classNames(projectcss.all, sty.freeBox__ahHX)}
          >
            <ItemSectionTitleDescriptionItem
              className={classNames(
                "__wab_instance",
                sty.itemSectionTitleDescriptionItem__v748H
              )}
              descriptionSection={
                "No matter where you are in your journey \u2014 training, practice, or beyond \u2014 there\u2019s an ASSH membership designed to elevate your career and connect you to the leaders in hand surgery."
              }
              title={"Who Can Join?"}
            />

            <ButtonPrimary
              data-plasmic-name={"buttonPrimary"}
              data-plasmic-override={overrides.buttonPrimary}
              className={classNames("__wab_instance", sty.buttonPrimary)}
              text={"Member Benefits"}
              textArrowButton={true}
              url={"https://www.assh.org/membership/member-benefits"}
            />

            <Stack__
              as={"div"}
              data-plasmic-name={"columns"}
              data-plasmic-override={overrides.columns}
              hasGap={true}
              className={classNames(projectcss.all, sty.columns)}
            >
              <div className={classNames(projectcss.all, sty.column__eLVwB)}>
                <ItemArticleCardItemWithDescription
                  articleTitle={"Active Member"}
                  className={classNames(
                    "__wab_instance",
                    sty.itemArticleCardItemWithDescription__zaJCs
                  )}
                  description={
                    "U.S. hand surgeons who have passed the CAQ and\u00a0Canadian hand surgeons\u00a0certified by the Royal College."
                  }
                  heading={"Membership Type"}
                  linkUrl={"https://www.assh.org/membership/active-member"}
                />
              </div>
              <div className={classNames(projectcss.all, sty.column__jMDoN)}>
                <ItemArticleCardItemWithDescription
                  articleTitle={"Candidate Member"}
                  className={classNames(
                    "__wab_instance",
                    sty.itemArticleCardItemWithDescription__qmm9P
                  )}
                  description={
                    "Surgeons within 3 years of completing residency, current fellows, and practicing surgeons up to 5 years."
                  }
                  heading={"Membership Type"}
                  linkUrl={"https://www.assh.org/membership/candidate-member"}
                />
              </div>
              <div className={classNames(projectcss.all, sty.column__wzcnh)}>
                <ItemArticleCardItemWithDescription
                  articleTitle={"International Member"}
                  className={classNames(
                    "__wab_instance",
                    sty.itemArticleCardItemWithDescription___4JgX
                  )}
                  description={
                    "Hand surgeons residing outside of the U.S. who have been in\u00a0practice minimum\u00a05 years."
                  }
                  heading={"Membership Type"}
                  linkUrl={
                    "https://www.assh.org/membership/international-member"
                  }
                />
              </div>
              <div className={classNames(projectcss.all, sty.column__lXl7W)}>
                <ItemArticleCardItemWithDescription
                  articleTitle={"Young International Member"}
                  className={classNames(
                    "__wab_instance",
                    sty.itemArticleCardItemWithDescription__lvbBe
                  )}
                  description={
                    "U.S. hand surgeons who have passed the CAQ and\u00a0Canadian hand surgeons\u00a0certified by the Royal College."
                  }
                  heading={"Membership Type"}
                  linkUrl={"https://www.assh.org/membership/active-member"}
                />
              </div>
              <div className={classNames(projectcss.all, sty.column__za2Y)}>
                <ItemArticleCardItemWithDescription
                  articleTitle={"Affiliate Member"}
                  className={classNames(
                    "__wab_instance",
                    sty.itemArticleCardItemWithDescription__kggH2
                  )}
                  description={
                    "U.S. hand surgeons who have passed the CAQ and\u00a0Canadian hand surgeons\u00a0certified by the Royal College."
                  }
                  heading={"Membership Type"}
                  linkUrl={"https://www.assh.org/membership/active-member"}
                />
              </div>
              <div className={classNames(projectcss.all, sty.column__pnFh0)}>
                <ItemArticleCardItemWithDescription
                  articleTitle={"Supporting Member"}
                  className={classNames(
                    "__wab_instance",
                    sty.itemArticleCardItemWithDescription__fNk6O
                  )}
                  description={
                    "U.S. hand surgeons who have passed the CAQ and\u00a0Canadian hand surgeons\u00a0certified by the Royal College."
                  }
                  heading={"Membership Type"}
                  linkUrl={"https://www.assh.org/membership/active-member"}
                />
              </div>
            </Stack__>
          </Stack__>
          <Stack__
            as={"div"}
            hasGap={true}
            className={classNames(projectcss.all, sty.freeBox__dwTGs)}
          >
            <SectionMidPageCtaSection
              data-plasmic-name={"sectionMidPageCtaSection"}
              data-plasmic-override={overrides.sectionMidPageCtaSection}
              className={classNames(
                "__wab_instance",
                sty.sectionMidPageCtaSection
              )}
              title={"Membership Overview - Mid-page CTA"}
            />

            <CardListMemberNewsWithDescription
              data-plasmic-name={"cardListMemberNewsWithDescription"}
              data-plasmic-override={
                overrides.cardListMemberNewsWithDescription
              }
              className={classNames(
                "__wab_instance",
                sty.cardListMemberNewsWithDescription
              )}
            />

            <BlockQuicklinksTanBox
              data-plasmic-name={"blockQuicklinksTanBox"}
              data-plasmic-override={overrides.blockQuicklinksTanBox}
              className={classNames(
                "__wab_instance",
                sty.blockQuicklinksTanBox
              )}
            />

            <ItemSectionTitleDescriptionItem
              className={classNames(
                "__wab_instance",
                sty.itemSectionTitleDescriptionItem__sfsZm
              )}
              descriptionSection={``}
              title={"Membership Benefits at a Glance"}
            />
          </Stack__>
          <Stack__
            as={"div"}
            hasGap={true}
            className={classNames(projectcss.all, sty.freeBox__rT0LT)}
          >
            <HtmlContentfulHtmlLoader
              className={classNames(
                "__wab_instance",
                sty.htmlContentfulHtmlLoader___6Geyx
              )}
              title={"Membership Overview - Benefits at a Glance Table"}
            />
          </Stack__>
          <ItemAd
            data-plasmic-name={"itemAd"}
            data-plasmic-override={overrides.itemAd}
            className={classNames("__wab_instance", sty.itemAd)}
          />

          <BlockAsshMissionBlueBlock
            data-plasmic-name={"blockAsshMissionBlueBlock"}
            data-plasmic-override={overrides.blockAsshMissionBlueBlock}
            className={classNames(
              "__wab_instance",
              sty.blockAsshMissionBlueBlock
            )}
          />

          <SectionFooterSection
            data-plasmic-name={"sectionFooterSection"}
            data-plasmic-override={overrides.sectionFooterSection}
            className={classNames("__wab_instance", sty.sectionFooterSection)}
          />
        </div>
      </div>
    </React.Fragment>
  );
}

const PlasmicDescendants = {
  root: [
    "root",
    "sectionHomeMenuSection",
    "sectionInternalHeroTitleSectionV2",
    "buttonPrimary",
    "columns",
    "sectionMidPageCtaSection",
    "cardListMemberNewsWithDescription",
    "blockQuicklinksTanBox",
    "itemAd",
    "blockAsshMissionBlueBlock",
    "sectionFooterSection"
  ],

  sectionHomeMenuSection: ["sectionHomeMenuSection"],
  sectionInternalHeroTitleSectionV2: ["sectionInternalHeroTitleSectionV2"],
  buttonPrimary: ["buttonPrimary"],
  columns: ["columns"],
  sectionMidPageCtaSection: ["sectionMidPageCtaSection"],
  cardListMemberNewsWithDescription: ["cardListMemberNewsWithDescription"],
  blockQuicklinksTanBox: ["blockQuicklinksTanBox"],
  itemAd: ["itemAd"],
  blockAsshMissionBlueBlock: ["blockAsshMissionBlueBlock"],
  sectionFooterSection: ["sectionFooterSection"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: PlasmicDescendants[nodeName],
          internalArgPropNames: PlasmicMembershipOverview__ArgProps,
          internalVariantPropNames: PlasmicMembershipOverview__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicMembershipOverview__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicMembershipOverview";
  } else {
    func.displayName = `PlasmicMembershipOverview.${nodeName}`;
  }
  return func;
}

export const PlasmicMembershipOverview = Object.assign(
  // Top-level PlasmicMembershipOverview renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    sectionHomeMenuSection: makeNodeComponent("sectionHomeMenuSection"),
    sectionInternalHeroTitleSectionV2: makeNodeComponent(
      "sectionInternalHeroTitleSectionV2"
    ),
    buttonPrimary: makeNodeComponent("buttonPrimary"),
    columns: makeNodeComponent("columns"),
    sectionMidPageCtaSection: makeNodeComponent("sectionMidPageCtaSection"),
    cardListMemberNewsWithDescription: makeNodeComponent(
      "cardListMemberNewsWithDescription"
    ),
    blockQuicklinksTanBox: makeNodeComponent("blockQuicklinksTanBox"),
    itemAd: makeNodeComponent("itemAd"),
    blockAsshMissionBlueBlock: makeNodeComponent("blockAsshMissionBlueBlock"),
    sectionFooterSection: makeNodeComponent("sectionFooterSection"),
    // Metadata about props expected for PlasmicMembershipOverview
    internalVariantProps: PlasmicMembershipOverview__VariantProps,
    internalArgProps: PlasmicMembershipOverview__ArgProps,
    // Page metadata
    pageMetadata: {
      title: "Membership Overview",
      description: "Membership Overview",
      ogImageSrc: "",
      canonical: ""
    }
  }
);

export default PlasmicMembershipOverview;
/* prettier-ignore-end */
