/* eslint-disable */
/* tslint:disable */
// @ts-nocheck
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: 34tvEQuyqfK98iGCjMbawB
// Component: 2ndlyHmTeyX5
import * as React from "react";
import { useRouter } from "next/router";
import {
  Stack as Stack__,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts
} from "@plasmicapp/react-web";
import { useDataEnv } from "@plasmicapp/react-web/lib/host";
import ButtonPrimary from "../../ButtonPrimary"; // plasmic-import: -2HqLDJqJBwh/component
import "@plasmicapp/react-web/lib/plasmic.css";
import plasmic_antd_5_hostless_css from "../antd_5_hostless/plasmic.module.css"; // plasmic-import: ohDidvG9XsCeFumugENU3J/projectcss
import plasmic_plasmic_rich_components_css from "../plasmic_rich_components/plasmic.module.css"; // plasmic-import: jkU633o1Cz7HrJdwdxhVHk/projectcss
import projectcss from "./plasmic.module.css"; // plasmic-import: 34tvEQuyqfK98iGCjMbawB/projectcss
import sty from "./PlasmicItemCourseList.module.css"; // plasmic-import: 2ndlyHmTeyX5/css
import Line21Icon from "./icons/PlasmicIcon__Line21"; // plasmic-import: ew_w6hxTtqNB/icon
import _9056784ChevronDownIcon1Icon from "./icons/PlasmicIcon___9056784ChevronDownIcon1"; // plasmic-import: 0PMr0kSHFTTU/icon
import Vector11Icon from "./icons/PlasmicIcon__Vector11"; // plasmic-import: GrYdOfcgUBm3/icon
import Line23Icon from "./icons/PlasmicIcon__Line23"; // plasmic-import: YqNzCip2afL4/icon
import CalendarIcon from "./icons/PlasmicIcon__Calendar"; // plasmic-import: -QPuoYK6GHTf/icon
import Vector12Icon from "./icons/PlasmicIcon__Vector12"; // plasmic-import: wDy45ufG8BQV/icon

createPlasmicElementProxy;

export const PlasmicItemCourseList__VariantProps = new Array();

export const PlasmicItemCourseList__ArgProps = new Array();

const $$ = {};

function useNextRouter() {
  try {
    return useRouter();
  } catch {}
  return undefined;
}

function PlasmicItemCourseList__RenderFunc(props) {
  const { variants, overrides, forNode } = props;
  const args = React.useMemo(
    () =>
      Object.assign(
        {},
        Object.fromEntries(
          Object.entries(props.args).filter(([_, v]) => v !== undefined)
        )
      ),
    [props.args]
  );
  const $props = {
    ...args,
    ...variants
  };
  const __nextRouter = useNextRouter();
  const $ctx = useDataEnv?.() || {};
  const refsRef = React.useRef({});
  const $refs = refsRef.current;
  return (
    <div
      data-plasmic-name={"root"}
      data-plasmic-override={overrides.root}
      data-plasmic-root={true}
      data-plasmic-for-node={forNode}
      className={classNames(
        projectcss.all,
        projectcss.root_reset,
        projectcss.plasmic_default_styles,
        projectcss.plasmic_mixins,
        projectcss.plasmic_tokens,
        plasmic_antd_5_hostless_css.plasmic_tokens,
        plasmic_plasmic_rich_components_css.plasmic_tokens,
        sty.root
      )}
    >
      <div
        data-plasmic-name={"_2Columns"}
        data-plasmic-override={overrides._2Columns}
        className={classNames(projectcss.all, sty._2Columns)}
      >
        <div className={classNames(projectcss.all, sty.freeBox__gl9R0)}>
          <div className={classNames(projectcss.all, sty.freeBox___2Egll)}>
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__y8Nm
              )}
            >
              {
                "The American Society for Surgery of the Hand delivers cutting-edge continuing medical education designed to advance the knowledge, skill, and impact of hand and upper extremity care. ASSH courses empower surgeons and healthcare professionals to elevate their clinical expertise and improve patient outcomes through enhanced competence and performance."
              }
            </div>
            <Stack__
              as={"div"}
              data-plasmic-name={"container5"}
              data-plasmic-override={overrides.container5}
              hasGap={true}
              className={classNames(projectcss.all, sty.container5)}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text___22N9
                )}
              >
                {
                  "The ASSH is accredited by the\u00a0Accreditation Council for Continuing Medical Education\u00a0to provide continuing medical education to physicians. For more information, read our Internet CME Policy and our Enduring Material Policy on our\u00a0policies page."
                }
              </div>
              <Line21Icon
                className={classNames(projectcss.all, sty.svg__vtppV)}
                role={"img"}
              />

              <Stack__
                as={"div"}
                data-plasmic-name={"column"}
                data-plasmic-override={overrides.column}
                hasGap={true}
                className={classNames(projectcss.all, sty.column)}
              >
                <Stack__
                  as={"div"}
                  data-plasmic-name={"linkItem"}
                  data-plasmic-override={overrides.linkItem}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.linkItem)}
                >
                  <div
                    className={classNames(projectcss.all, sty.freeBox__fW3W)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__fvkLm
                      )}
                    >
                      {"Claim CME"}
                    </div>
                    <ButtonPrimary
                      className={classNames(
                        "__wab_instance",
                        sty.buttonPrimary__esfBo
                      )}
                      quicklinkOption={true}
                      text={"Claim CME"}
                      url={"https://www.assh.org/s/my-profile"}
                    />

                    <ButtonPrimary
                      className={classNames(
                        "__wab_instance",
                        sty.buttonPrimary__pykv
                      )}
                      quicklinkOption={true}
                      text={"Other CME Resources"}
                      url={
                        "https://onlinecme.assh.org/Public/Catalog/Home.aspx"
                      }
                    />

                    <ButtonPrimary
                      className={classNames(
                        "__wab_instance",
                        sty.buttonPrimary__s52Ia
                      )}
                      quicklinkOption={true}
                      text={"Faculty Resources"}
                      url={
                        "https://www.assh.org/s/faculty-resources?id=aBP0a000000L5eVGAS"
                      }
                    />

                    <ButtonPrimary
                      className={classNames(
                        "__wab_instance",
                        sty.buttonPrimary__iKYpz
                      )}
                      quicklinkOption={true}
                      text={"Non-ASSH Courses"}
                    />
                  </div>
                </Stack__>
              </Stack__>
            </Stack__>
          </div>
        </div>
      </div>
      <Stack__
        as={"div"}
        data-plasmic-name={"_2Column"}
        data-plasmic-override={overrides._2Column}
        hasGap={true}
        className={classNames(projectcss.all, sty._2Column)}
      >
        <Stack__
          as={"div"}
          data-plasmic-name={"main"}
          data-plasmic-override={overrides.main}
          hasGap={true}
          className={classNames(projectcss.all, sty.main)}
        >
          <Stack__
            as={"div"}
            data-plasmic-name={"filterBar"}
            data-plasmic-override={overrides.filterBar}
            hasGap={true}
            className={classNames(projectcss.all, sty.filterBar)}
          >
            <Stack__
              as={"div"}
              data-plasmic-name={"filterBtn"}
              data-plasmic-override={overrides.filterBtn}
              hasGap={true}
              className={classNames(projectcss.all, sty.filterBtn)}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__o1RqG
                )}
              >
                {"Type"}
              </div>
              <_9056784ChevronDownIcon1Icon
                className={classNames(projectcss.all, sty.svg__ufLt)}
                role={"img"}
              />
            </Stack__>
            <Stack__
              as={"div"}
              data-plasmic-name={"filterBtn2"}
              data-plasmic-override={overrides.filterBtn2}
              hasGap={true}
              className={classNames(projectcss.all, sty.filterBtn2)}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__dMzdP
                )}
              >
                {"Topic"}
              </div>
              <_9056784ChevronDownIcon1Icon
                className={classNames(projectcss.all, sty.svg__f3Pa)}
                role={"img"}
              />
            </Stack__>
          </Stack__>
          <Stack__
            as={"div"}
            data-plasmic-name={"list"}
            data-plasmic-override={overrides.list}
            hasGap={true}
            className={classNames(projectcss.all, sty.list)}
          >
            <Stack__
              as={"div"}
              data-plasmic-name={"newsItem"}
              data-plasmic-override={overrides.newsItem}
              hasGap={true}
              className={classNames(projectcss.all, sty.newsItem)}
            >
              <Stack__
                as={"div"}
                data-plasmic-name={"container"}
                data-plasmic-override={overrides.container}
                hasGap={true}
                className={classNames(projectcss.all, sty.container)}
              >
                {false ? (
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__xko4N
                    )}
                  >
                    {"SLUG"}
                  </div>
                ) : null}
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__ufu3
                  )}
                >
                  {"2024 Comprehensive Review Course \u2013 On Demand"}
                </div>
                {false ? (
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__zYdzg
                    )}
                  >
                    {"Short description text"}
                  </div>
                ) : null}
                <Stack__
                  as={"div"}
                  data-plasmic-name={"frame18"}
                  data-plasmic-override={overrides.frame18}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.frame18)}
                >
                  <Vector11Icon
                    className={classNames(projectcss.all, sty.svg__r12SR)}
                    role={"img"}
                  />

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__vVygi
                    )}
                  >
                    {"On Demand"}
                  </div>
                </Stack__>
              </Stack__>
              {false ? (
                <div
                  data-plasmic-name={"rectangle26"}
                  data-plasmic-override={overrides.rectangle26}
                  className={classNames(projectcss.all, sty.rectangle26)}
                />
              ) : null}
            </Stack__>
            <Line23Icon
              className={classNames(projectcss.all, sty.svg__fdnf)}
              role={"img"}
            />

            <Stack__
              as={"div"}
              data-plasmic-name={"newsItem2"}
              data-plasmic-override={overrides.newsItem2}
              hasGap={true}
              className={classNames(projectcss.all, sty.newsItem2)}
            >
              <Stack__
                as={"div"}
                data-plasmic-name={"container2"}
                data-plasmic-override={overrides.container2}
                hasGap={true}
                className={classNames(projectcss.all, sty.container2)}
              >
                {false ? (
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__b2O2E
                    )}
                  >
                    {"SLUG"}
                  </div>
                ) : null}
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__u19Qw
                  )}
                >
                  {"2025 IFSSH and IFSHT Triennial Congress"}
                </div>
                <Stack__
                  as={"div"}
                  data-plasmic-name={"frame19"}
                  data-plasmic-override={overrides.frame19}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.frame19)}
                >
                  <CalendarIcon
                    className={classNames(projectcss.all, sty.svg__wroCn)}
                    role={"img"}
                  />

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___3SPg8
                    )}
                  >
                    {"March 24-28, 2025"}
                  </div>
                </Stack__>
                <Stack__
                  as={"div"}
                  data-plasmic-name={"frame20"}
                  data-plasmic-override={overrides.frame20}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.frame20)}
                >
                  <Vector12Icon
                    className={classNames(projectcss.all, sty.svg__h5Crr)}
                    role={"img"}
                  />

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__ibTj
                    )}
                  >
                    {"Washington, D.C., USA"}
                  </div>
                </Stack__>
              </Stack__>
              <div
                data-plasmic-name={"rectangle27"}
                data-plasmic-override={overrides.rectangle27}
                className={classNames(projectcss.all, sty.rectangle27)}
              />
            </Stack__>
            <Line23Icon
              className={classNames(projectcss.all, sty.svg__e2MD)}
              role={"img"}
            />

            <Stack__
              as={"div"}
              data-plasmic-name={"newsItem3"}
              data-plasmic-override={overrides.newsItem3}
              hasGap={true}
              className={classNames(projectcss.all, sty.newsItem3)}
            >
              <Stack__
                as={"div"}
                data-plasmic-name={"container3"}
                data-plasmic-override={overrides.container3}
                hasGap={true}
                className={classNames(projectcss.all, sty.container3)}
              >
                {false ? (
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__czR7W
                    )}
                  >
                    {"SLUG"}
                  </div>
                ) : null}
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__giSk3
                  )}
                >
                  {"80th Annual Meeting of the ASSH"}
                </div>
                <Stack__
                  as={"div"}
                  data-plasmic-name={"frame21"}
                  data-plasmic-override={overrides.frame21}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.frame21)}
                >
                  <CalendarIcon
                    className={classNames(projectcss.all, sty.svg__duXpG)}
                    role={"img"}
                  />

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__ifgDk
                    )}
                  >
                    {
                      "Thursday, October 9, 2025 \u2013 Saturday, October 11, 2025"
                    }
                  </div>
                </Stack__>
                <Stack__
                  as={"div"}
                  data-plasmic-name={"frame22"}
                  data-plasmic-override={overrides.frame22}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.frame22)}
                >
                  <Vector12Icon
                    className={classNames(projectcss.all, sty.svg__s7SKw)}
                    role={"img"}
                  />

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__lsdAd
                    )}
                  >
                    {"Vancouver Convention Centre \u2013 Vancouver, BC, Canada"}
                  </div>
                </Stack__>
              </Stack__>
              <div
                data-plasmic-name={"rectangle28"}
                data-plasmic-override={overrides.rectangle28}
                className={classNames(projectcss.all, sty.rectangle28)}
              />
            </Stack__>
            <Line23Icon
              className={classNames(projectcss.all, sty.svg___5AnLv)}
              role={"img"}
            />

            <Stack__
              as={"div"}
              data-plasmic-name={"newsItem4"}
              data-plasmic-override={overrides.newsItem4}
              hasGap={true}
              className={classNames(projectcss.all, sty.newsItem4)}
            >
              <Stack__
                as={"div"}
                data-plasmic-name={"container4"}
                data-plasmic-override={overrides.container4}
                hasGap={true}
                className={classNames(projectcss.all, sty.container4)}
              >
                {false ? (
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__akaWb
                    )}
                  >
                    {"SLUG"}
                  </div>
                ) : null}
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__tG0SV
                  )}
                >
                  {
                    "ASSH CME Webinar: Osteochondral Reconstruction of Scaphoid Proximal Pole Nonunions: Technique Tips, and Tricks"
                  }
                </div>
                <Stack__
                  as={"div"}
                  data-plasmic-name={"frame23"}
                  data-plasmic-override={overrides.frame23}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.frame23)}
                >
                  <CalendarIcon
                    className={classNames(projectcss.all, sty.svg__nrpZk)}
                    role={"img"}
                  />

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__hmQe7
                    )}
                  >
                    {"Tuesday, May 13, 2025"}
                  </div>
                </Stack__>
              </Stack__>
              {false ? (
                <div
                  data-plasmic-name={"rectangle29"}
                  data-plasmic-override={overrides.rectangle29}
                  className={classNames(projectcss.all, sty.rectangle29)}
                />
              ) : null}
            </Stack__>
            <Line23Icon
              className={classNames(projectcss.all, sty.svg__es5VC)}
              role={"img"}
            />
          </Stack__>
          <Stack__
            as={"div"}
            data-plasmic-name={"pagination"}
            data-plasmic-override={overrides.pagination}
            hasGap={true}
            className={classNames(projectcss.all, sty.pagination)}
          >
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__nAsj
              )}
            >
              {"1"}
            </div>
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text___87Xud
              )}
            >
              {"|"}
            </div>
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__unOhy
              )}
            >
              {"2"}
            </div>
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__chwDx
              )}
            >
              {"|"}
            </div>
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__ymFu9
              )}
            >
              {"3"}
            </div>
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text___4SllU
              )}
            >
              {"|"}
            </div>
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__uFyZ
              )}
            >
              {"4"}
            </div>
          </Stack__>
        </Stack__>
        <Stack__
          as={"div"}
          data-plasmic-name={"right"}
          data-plasmic-override={overrides.right}
          hasGap={true}
          className={classNames(projectcss.all, sty.right)}
        />
      </Stack__>
    </div>
  );
}

const PlasmicDescendants = {
  root: [
    "root",
    "_2Columns",
    "container5",
    "column",
    "linkItem",
    "_2Column",
    "main",
    "filterBar",
    "filterBtn",
    "filterBtn2",
    "list",
    "newsItem",
    "container",
    "frame18",
    "rectangle26",
    "newsItem2",
    "container2",
    "frame19",
    "frame20",
    "rectangle27",
    "newsItem3",
    "container3",
    "frame21",
    "frame22",
    "rectangle28",
    "newsItem4",
    "container4",
    "frame23",
    "rectangle29",
    "pagination",
    "right"
  ],

  _2Columns: ["_2Columns", "container5", "column", "linkItem"],
  container5: ["container5", "column", "linkItem"],
  column: ["column", "linkItem"],
  linkItem: ["linkItem"],
  _2Column: [
    "_2Column",
    "main",
    "filterBar",
    "filterBtn",
    "filterBtn2",
    "list",
    "newsItem",
    "container",
    "frame18",
    "rectangle26",
    "newsItem2",
    "container2",
    "frame19",
    "frame20",
    "rectangle27",
    "newsItem3",
    "container3",
    "frame21",
    "frame22",
    "rectangle28",
    "newsItem4",
    "container4",
    "frame23",
    "rectangle29",
    "pagination",
    "right"
  ],

  main: [
    "main",
    "filterBar",
    "filterBtn",
    "filterBtn2",
    "list",
    "newsItem",
    "container",
    "frame18",
    "rectangle26",
    "newsItem2",
    "container2",
    "frame19",
    "frame20",
    "rectangle27",
    "newsItem3",
    "container3",
    "frame21",
    "frame22",
    "rectangle28",
    "newsItem4",
    "container4",
    "frame23",
    "rectangle29",
    "pagination"
  ],

  filterBar: ["filterBar", "filterBtn", "filterBtn2"],
  filterBtn: ["filterBtn"],
  filterBtn2: ["filterBtn2"],
  list: [
    "list",
    "newsItem",
    "container",
    "frame18",
    "rectangle26",
    "newsItem2",
    "container2",
    "frame19",
    "frame20",
    "rectangle27",
    "newsItem3",
    "container3",
    "frame21",
    "frame22",
    "rectangle28",
    "newsItem4",
    "container4",
    "frame23",
    "rectangle29"
  ],

  newsItem: ["newsItem", "container", "frame18", "rectangle26"],
  container: ["container", "frame18"],
  frame18: ["frame18"],
  rectangle26: ["rectangle26"],
  newsItem2: ["newsItem2", "container2", "frame19", "frame20", "rectangle27"],
  container2: ["container2", "frame19", "frame20"],
  frame19: ["frame19"],
  frame20: ["frame20"],
  rectangle27: ["rectangle27"],
  newsItem3: ["newsItem3", "container3", "frame21", "frame22", "rectangle28"],
  container3: ["container3", "frame21", "frame22"],
  frame21: ["frame21"],
  frame22: ["frame22"],
  rectangle28: ["rectangle28"],
  newsItem4: ["newsItem4", "container4", "frame23", "rectangle29"],
  container4: ["container4", "frame23"],
  frame23: ["frame23"],
  rectangle29: ["rectangle29"],
  pagination: ["pagination"],
  right: ["right"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: PlasmicDescendants[nodeName],
          internalArgPropNames: PlasmicItemCourseList__ArgProps,
          internalVariantPropNames: PlasmicItemCourseList__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicItemCourseList__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicItemCourseList";
  } else {
    func.displayName = `PlasmicItemCourseList.${nodeName}`;
  }
  return func;
}

export const PlasmicItemCourseList = Object.assign(
  // Top-level PlasmicItemCourseList renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    _2Columns: makeNodeComponent("_2Columns"),
    container5: makeNodeComponent("container5"),
    column: makeNodeComponent("column"),
    linkItem: makeNodeComponent("linkItem"),
    _2Column: makeNodeComponent("_2Column"),
    main: makeNodeComponent("main"),
    filterBar: makeNodeComponent("filterBar"),
    filterBtn: makeNodeComponent("filterBtn"),
    filterBtn2: makeNodeComponent("filterBtn2"),
    list: makeNodeComponent("list"),
    newsItem: makeNodeComponent("newsItem"),
    container: makeNodeComponent("container"),
    frame18: makeNodeComponent("frame18"),
    rectangle26: makeNodeComponent("rectangle26"),
    newsItem2: makeNodeComponent("newsItem2"),
    container2: makeNodeComponent("container2"),
    frame19: makeNodeComponent("frame19"),
    frame20: makeNodeComponent("frame20"),
    rectangle27: makeNodeComponent("rectangle27"),
    newsItem3: makeNodeComponent("newsItem3"),
    container3: makeNodeComponent("container3"),
    frame21: makeNodeComponent("frame21"),
    frame22: makeNodeComponent("frame22"),
    rectangle28: makeNodeComponent("rectangle28"),
    newsItem4: makeNodeComponent("newsItem4"),
    container4: makeNodeComponent("container4"),
    frame23: makeNodeComponent("frame23"),
    rectangle29: makeNodeComponent("rectangle29"),
    pagination: makeNodeComponent("pagination"),
    right: makeNodeComponent("right"),
    // Metadata about props expected for PlasmicItemCourseList
    internalVariantProps: PlasmicItemCourseList__VariantProps,
    internalArgProps: PlasmicItemCourseList__ArgProps
  }
);

export default PlasmicItemCourseList;
/* prettier-ignore-end */
