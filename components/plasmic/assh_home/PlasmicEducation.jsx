/* eslint-disable */
/* tslint:disable */
// @ts-nocheck
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: 34tvEQuyqfK98iGCjMbawB
// Component: 75jatMM1eO89
import * as React from "react";
import Head from "next/head";
import { useRouter } from "next/router";
import {
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts
} from "@plasmicapp/react-web";
import { useDataEnv } from "@plasmicapp/react-web/lib/host";
import AsshMenuFigmaImport from "../../AsshMenuFigmaImport"; // plasmic-import: HrBwnQh3XfKO/component
import SectionTitleBar from "../../SectionTitleBar"; // plasmic-import: 8dary0IReKTd/component
import SectionCmeMoc from "../../SectionCmeMoc"; // plasmic-import: QQidogip4Svc/component
import SectionHighlightSection from "../../SectionHighlightSection"; // plasmic-import: yV5r8KM9AbUW/component
import SectionUpcomingEvents2 from "../../SectionUpcomingEvents2"; // plasmic-import: aDAIm3T_wfOv/component
import ComponentTanInfoCard from "../../ComponentTanInfoCard"; // plasmic-import: KjbcRISpC18Z/component
import ComponentCheckboxSection from "../../ComponentCheckboxSection"; // plasmic-import: RE6X9KOLcUTN/component
import SectionBlueMission from "../../SectionBlueMission"; // plasmic-import: oMTPDeBb_fES/component
import SectionFooter from "../../SectionFooter"; // plasmic-import: l_IC-pMZ1T4O/component
import "@plasmicapp/react-web/lib/plasmic.css";
import plasmic_antd_5_hostless_css from "../antd_5_hostless/plasmic.module.css"; // plasmic-import: ohDidvG9XsCeFumugENU3J/projectcss
import plasmic_plasmic_rich_components_css from "../plasmic_rich_components/plasmic.module.css"; // plasmic-import: jkU633o1Cz7HrJdwdxhVHk/projectcss
import projectcss from "./plasmic.module.css"; // plasmic-import: 34tvEQuyqfK98iGCjMbawB/projectcss
import sty from "./PlasmicEducation.module.css"; // plasmic-import: 75jatMM1eO89/css

createPlasmicElementProxy;

export const PlasmicEducation__VariantProps = new Array();

export const PlasmicEducation__ArgProps = new Array();

const $$ = {};

function useNextRouter() {
  try {
    return useRouter();
  } catch {}
  return undefined;
}

function PlasmicEducation__RenderFunc(props) {
  const { variants, overrides, forNode } = props;
  const args = React.useMemo(
    () =>
      Object.assign(
        {},
        Object.fromEntries(
          Object.entries(props.args).filter(([_, v]) => v !== undefined)
        )
      ),
    [props.args]
  );
  const $props = {
    ...args,
    ...variants
  };
  const __nextRouter = useNextRouter();
  const $ctx = useDataEnv?.() || {};
  const refsRef = React.useRef({});
  const $refs = refsRef.current;
  return (
    <React.Fragment>
      <Head></Head>

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            projectcss.plasmic_tokens,
            plasmic_antd_5_hostless_css.plasmic_tokens,
            plasmic_plasmic_rich_components_css.plasmic_tokens,
            sty.root
          )}
        >
          <AsshMenuFigmaImport
            data-plasmic-name={"asshMenuFigmaImport"}
            data-plasmic-override={overrides.asshMenuFigmaImport}
            className={classNames("__wab_instance", sty.asshMenuFigmaImport)}
          />

          <SectionTitleBar
            data-plasmic-name={"sectionTitleBar"}
            data-plasmic-override={overrides.sectionTitleBar}
            className={classNames("__wab_instance", sty.sectionTitleBar)}
          />

          <SectionCmeMoc
            data-plasmic-name={"sectionCmeMoc"}
            data-plasmic-override={overrides.sectionCmeMoc}
            className={classNames("__wab_instance", sty.sectionCmeMoc)}
          />

          <SectionHighlightSection
            data-plasmic-name={"sectionHighlightSection"}
            data-plasmic-override={overrides.sectionHighlightSection}
            className={classNames(
              "__wab_instance",
              sty.sectionHighlightSection
            )}
          />

          <SectionUpcomingEvents2
            data-plasmic-name={"sectionUpcomingEvents2"}
            data-plasmic-override={overrides.sectionUpcomingEvents2}
            className={classNames("__wab_instance", sty.sectionUpcomingEvents2)}
          />

          <ComponentTanInfoCard
            data-plasmic-name={"componentTanInfoCard"}
            data-plasmic-override={overrides.componentTanInfoCard}
            className={classNames("__wab_instance", sty.componentTanInfoCard)}
          />

          <ComponentCheckboxSection
            data-plasmic-name={"componentCheckboxSection"}
            data-plasmic-override={overrides.componentCheckboxSection}
            className={classNames(
              "__wab_instance",
              sty.componentCheckboxSection
            )}
          />

          <SectionBlueMission
            data-plasmic-name={"sectionBlueMission"}
            data-plasmic-override={overrides.sectionBlueMission}
            className={classNames("__wab_instance", sty.sectionBlueMission)}
          />

          <SectionFooter
            data-plasmic-name={"sectionFooter"}
            data-plasmic-override={overrides.sectionFooter}
            className={classNames("__wab_instance", sty.sectionFooter)}
          />
        </div>
      </div>
    </React.Fragment>
  );
}

const PlasmicDescendants = {
  root: [
    "root",
    "asshMenuFigmaImport",
    "sectionTitleBar",
    "sectionCmeMoc",
    "sectionHighlightSection",
    "sectionUpcomingEvents2",
    "componentTanInfoCard",
    "componentCheckboxSection",
    "sectionBlueMission",
    "sectionFooter"
  ],

  asshMenuFigmaImport: ["asshMenuFigmaImport"],
  sectionTitleBar: ["sectionTitleBar"],
  sectionCmeMoc: ["sectionCmeMoc"],
  sectionHighlightSection: ["sectionHighlightSection"],
  sectionUpcomingEvents2: ["sectionUpcomingEvents2"],
  componentTanInfoCard: ["componentTanInfoCard"],
  componentCheckboxSection: ["componentCheckboxSection"],
  sectionBlueMission: ["sectionBlueMission"],
  sectionFooter: ["sectionFooter"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: PlasmicDescendants[nodeName],
          internalArgPropNames: PlasmicEducation__ArgProps,
          internalVariantPropNames: PlasmicEducation__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicEducation__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicEducation";
  } else {
    func.displayName = `PlasmicEducation.${nodeName}`;
  }
  return func;
}

export const PlasmicEducation = Object.assign(
  // Top-level PlasmicEducation renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    asshMenuFigmaImport: makeNodeComponent("asshMenuFigmaImport"),
    sectionTitleBar: makeNodeComponent("sectionTitleBar"),
    sectionCmeMoc: makeNodeComponent("sectionCmeMoc"),
    sectionHighlightSection: makeNodeComponent("sectionHighlightSection"),
    sectionUpcomingEvents2: makeNodeComponent("sectionUpcomingEvents2"),
    componentTanInfoCard: makeNodeComponent("componentTanInfoCard"),
    componentCheckboxSection: makeNodeComponent("componentCheckboxSection"),
    sectionBlueMission: makeNodeComponent("sectionBlueMission"),
    sectionFooter: makeNodeComponent("sectionFooter"),
    // Metadata about props expected for PlasmicEducation
    internalVariantProps: PlasmicEducation__VariantProps,
    internalArgProps: PlasmicEducation__ArgProps,
    // Page metadata
    pageMetadata: {
      title: "",
      description: "",
      ogImageSrc: "",
      canonical: ""
    }
  }
);

export default PlasmicEducation;
/* prettier-ignore-end */
