/* eslint-disable */
/* tslint:disable */
// @ts-nocheck
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: 34tvEQuyqfK98iGCjMbawB
// Component: XmsGLZyds9Te
import * as React from "react";
import { useRouter } from "next/router";
import {
  PlasmicImg as PlasmicImg__,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts
} from "@plasmicapp/react-web";
import { useDataEnv } from "@plasmicapp/react-web/lib/host";
import { usePlasmicDataOp } from "@plasmicapp/react-web/lib/data-sources";
import ItemArticleCardItemWithDescription from "../../ItemArticleCardItemWithDescription"; // plasmic-import: m6xY8jJvNbEQ/component
import ComponentMembershipQuicklinks from "../../ComponentMembershipQuicklinks"; // plasmic-import: FGT9utqXA6R0/component
import "@plasmicapp/react-web/lib/plasmic.css";
import plasmic_antd_5_hostless_css from "../antd_5_hostless/plasmic.module.css"; // plasmic-import: ohDidvG9XsCeFumugENU3J/projectcss
import plasmic_plasmic_rich_components_css from "../plasmic_rich_components/plasmic.module.css"; // plasmic-import: jkU633o1Cz7HrJdwdxhVHk/projectcss
import projectcss from "./plasmic.module.css"; // plasmic-import: 34tvEQuyqfK98iGCjMbawB/projectcss
import sty from "./PlasmicSectionMidHomepageMembershipInfoWithQuicklinks.module.css"; // plasmic-import: XmsGLZyds9Te/css

createPlasmicElementProxy;

export const PlasmicSectionMidHomepageMembershipInfoWithQuicklinks__VariantProps =
  new Array();

export const PlasmicSectionMidHomepageMembershipInfoWithQuicklinks__ArgProps =
  new Array("title", "name");

const $$ = {};

function useNextRouter() {
  try {
    return useRouter();
  } catch {}
  return undefined;
}

function PlasmicSectionMidHomepageMembershipInfoWithQuicklinks__RenderFunc(
  props
) {
  const { variants, overrides, forNode } = props;
  const args = React.useMemo(
    () =>
      Object.assign(
        {
          title: "Membership Codes",
          name: "Member Quicklinks"
        },
        Object.fromEntries(
          Object.entries(props.args).filter(([_, v]) => v !== undefined)
        )
      ),
    [props.args]
  );
  const $props = {
    ...args,
    ...variants
  };
  const __nextRouter = useNextRouter();
  const $ctx = useDataEnv?.() || {};
  const refsRef = React.useRef({});
  const $refs = refsRef.current;
  let [$queries, setDollarQueries] = React.useState({});
  const new$Queries = {
    getImage: usePlasmicDataOp(() => {
      return {
        sourceId: "n5sYZavh6xkK4D8BEueUSq",
        opId: "0c2afc0b-6aa8-47c9-b10b-6228850bafaf",
        userArgs: {
          path: [$queries.getHeroContentHome.data.response.items[0].sys.id]
        },
        cacheKey: `plasmic.$.0c2afc0b-6aa8-47c9-b10b-6228850bafaf.$.`,
        invalidatedKeys: null,
        roleId: null
      };
    }),
    getHeroContentHome: usePlasmicDataOp(() => {
      return {
        sourceId: "tbVV8SR67UpQ6Z9zuPcDPB",
        opId: "056d8b4c-e6bc-4eb0-a093-5fc1e895ee29",
        userArgs: {
          headers: [$props.title]
        },
        cacheKey: `plasmic.$.056d8b4c-e6bc-4eb0-a093-5fc1e895ee29.$.`,
        invalidatedKeys: null,
        roleId: null
      };
    }),
    getQuickLinks: usePlasmicDataOp(() => {
      return {
        sourceId: "tbVV8SR67UpQ6Z9zuPcDPB",
        opId: "8d0fa306-f978-47db-98f6-35e5fc3d58ef",
        userArgs: {
          headers: [$props.name]
        },
        cacheKey: `plasmic.$.8d0fa306-f978-47db-98f6-35e5fc3d58ef.$.`,
        invalidatedKeys: null,
        roleId: null
      };
    })
  };
  if (Object.keys(new$Queries).some(k => new$Queries[k] !== $queries[k])) {
    setDollarQueries(new$Queries);
    $queries = new$Queries;
  }
  return (
    <div
      data-plasmic-name={"root"}
      data-plasmic-override={overrides.root}
      data-plasmic-root={true}
      data-plasmic-for-node={forNode}
      className={classNames(
        projectcss.all,
        projectcss.root_reset,
        projectcss.plasmic_default_styles,
        projectcss.plasmic_mixins,
        projectcss.plasmic_tokens,
        plasmic_antd_5_hostless_css.plasmic_tokens,
        plasmic_plasmic_rich_components_css.plasmic_tokens,
        sty.root
      )}
    >
      <div
        data-plasmic-name={"freeBox"}
        data-plasmic-override={overrides.freeBox}
        className={classNames(projectcss.all, sty.freeBox)}
      >
        <div
          data-plasmic-name={"columns"}
          data-plasmic-override={overrides.columns}
          className={classNames(projectcss.all, sty.columns)}
        >
          <div className={classNames(projectcss.all, sty.column__tn9Zf)}>
            <ItemArticleCardItemWithDescription
              data-plasmic-name={"itemArticleCardItemWithDescription"}
              data-plasmic-override={
                overrides.itemArticleCardItemWithDescription
              }
              className={classNames(
                "__wab_instance",
                sty.itemArticleCardItemWithDescription
              )}
            />
          </div>
          <div className={classNames(projectcss.all, sty.column__toS2)}>
            <PlasmicImg__
              data-plasmic-name={"img"}
              data-plasmic-override={overrides.img}
              alt={""}
              className={classNames(sty.img)}
              displayHeight={"auto"}
              displayMaxHeight={"none"}
              displayMaxWidth={"100%"}
              displayMinHeight={"0"}
              displayMinWidth={"0"}
              displayWidth={"100%"}
              loading={"lazy"}
              src={(() => {
                try {
                  return $queries.getImage.data.response.fields.file.url;
                } catch (e) {
                  if (
                    e instanceof TypeError ||
                    e?.plasmicType === "PlasmicUndefinedDataError"
                  ) {
                    return undefined;
                  }
                  throw e;
                }
              })()}
            />

            <ComponentMembershipQuicklinks
              data-plasmic-name={"componentMembershipQuicklinks"}
              data-plasmic-override={overrides.componentMembershipQuicklinks}
              className={classNames(
                "__wab_instance",
                sty.componentMembershipQuicklinks
              )}
            />
          </div>
        </div>
      </div>
    </div>
  );
}

const PlasmicDescendants = {
  root: [
    "root",
    "freeBox",
    "columns",
    "itemArticleCardItemWithDescription",
    "img",
    "componentMembershipQuicklinks"
  ],

  freeBox: [
    "freeBox",
    "columns",
    "itemArticleCardItemWithDescription",
    "img",
    "componentMembershipQuicklinks"
  ],

  columns: [
    "columns",
    "itemArticleCardItemWithDescription",
    "img",
    "componentMembershipQuicklinks"
  ],

  itemArticleCardItemWithDescription: ["itemArticleCardItemWithDescription"],
  img: ["img"],
  componentMembershipQuicklinks: ["componentMembershipQuicklinks"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: PlasmicDescendants[nodeName],
          internalArgPropNames:
            PlasmicSectionMidHomepageMembershipInfoWithQuicklinks__ArgProps,
          internalVariantPropNames:
            PlasmicSectionMidHomepageMembershipInfoWithQuicklinks__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicSectionMidHomepageMembershipInfoWithQuicklinks__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicSectionMidHomepageMembershipInfoWithQuicklinks";
  } else {
    func.displayName = `PlasmicSectionMidHomepageMembershipInfoWithQuicklinks.${nodeName}`;
  }
  return func;
}

export const PlasmicSectionMidHomepageMembershipInfoWithQuicklinks =
  Object.assign(
    // Top-level PlasmicSectionMidHomepageMembershipInfoWithQuicklinks renders the root element
    makeNodeComponent("root"),
    {
      // Helper components rendering sub-elements
      freeBox: makeNodeComponent("freeBox"),
      columns: makeNodeComponent("columns"),
      itemArticleCardItemWithDescription: makeNodeComponent(
        "itemArticleCardItemWithDescription"
      ),
      img: makeNodeComponent("img"),
      componentMembershipQuicklinks: makeNodeComponent(
        "componentMembershipQuicklinks"
      ),
      // Metadata about props expected for PlasmicSectionMidHomepageMembershipInfoWithQuicklinks
      internalVariantProps:
        PlasmicSectionMidHomepageMembershipInfoWithQuicklinks__VariantProps,
      internalArgProps:
        PlasmicSectionMidHomepageMembershipInfoWithQuicklinks__ArgProps
    }
  );

export default PlasmicSectionMidHomepageMembershipInfoWithQuicklinks;
/* prettier-ignore-end */
