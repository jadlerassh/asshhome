/* eslint-disable */
/* tslint:disable */
// @ts-nocheck
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: 34tvEQuyqfK98iGCjMbawB
// Component: XmsGLZyds9Te
import * as React from "react";
import { useRouter } from "next/router";
import {
  Stack as Stack__,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts
} from "@plasmicapp/react-web";
import { useDataEnv } from "@plasmicapp/react-web/lib/host";
import { usePlasmicDataOp } from "@plasmicapp/react-web/lib/data-sources";
import ButtonPrimary from "../../ButtonPrimary"; // plasmic-import: -2HqLDJqJBwh/component
import "@plasmicapp/react-web/lib/plasmic.css";
import plasmic_antd_5_hostless_css from "../antd_5_hostless/plasmic.module.css"; // plasmic-import: ohDidvG9XsCeFumugENU3J/projectcss
import plasmic_plasmic_rich_components_css from "../plasmic_rich_components/plasmic.module.css"; // plasmic-import: jkU633o1Cz7HrJdwdxhVHk/projectcss
import projectcss from "./plasmic.module.css"; // plasmic-import: 34tvEQuyqfK98iGCjMbawB/projectcss
import sty from "./PlasmicSectionMidHomepageMembershipInfoWithQuicklinks.module.css"; // plasmic-import: XmsGLZyds9Te/css
import ChevronRight2Icon from "./icons/PlasmicIcon__ChevronRight2"; // plasmic-import: TySuoJlWGjIs/icon

createPlasmicElementProxy;

export const PlasmicSectionMidHomepageMembershipInfoWithQuicklinks__VariantProps =
  new Array();

export const PlasmicSectionMidHomepageMembershipInfoWithQuicklinks__ArgProps =
  new Array("title", "name");

const $$ = {};

function useNextRouter() {
  try {
    return useRouter();
  } catch {}
  return undefined;
}

function PlasmicSectionMidHomepageMembershipInfoWithQuicklinks__RenderFunc(
  props
) {
  const { variants, overrides, forNode } = props;
  const args = React.useMemo(
    () =>
      Object.assign(
        {
          title: "Membership Codes",
          name: "Member Quicklinks"
        },
        Object.fromEntries(
          Object.entries(props.args).filter(([_, v]) => v !== undefined)
        )
      ),
    [props.args]
  );
  const $props = {
    ...args,
    ...variants
  };
  const __nextRouter = useNextRouter();
  const $ctx = useDataEnv?.() || {};
  const refsRef = React.useRef({});
  const $refs = refsRef.current;
  let [$queries, setDollarQueries] = React.useState({});
  const new$Queries = {
    getImage: usePlasmicDataOp(() => {
      return {
        sourceId: "n5sYZavh6xkK4D8BEueUSq",
        opId: "0c2afc0b-6aa8-47c9-b10b-6228850bafaf",
        userArgs: {
          path: [$queries.getHeroContentHome.data.response.items[0].sys.id]
        },
        cacheKey: `plasmic.$.0c2afc0b-6aa8-47c9-b10b-6228850bafaf.$.`,
        invalidatedKeys: null,
        roleId: null
      };
    }),
    getHeroContentHome: usePlasmicDataOp(() => {
      return {
        sourceId: "tbVV8SR67UpQ6Z9zuPcDPB",
        opId: "056d8b4c-e6bc-4eb0-a093-5fc1e895ee29",
        userArgs: {
          headers: [$props.title]
        },
        cacheKey: `plasmic.$.056d8b4c-e6bc-4eb0-a093-5fc1e895ee29.$.`,
        invalidatedKeys: null,
        roleId: null
      };
    }),
    getQuickLinks: usePlasmicDataOp(() => {
      return {
        sourceId: "tbVV8SR67UpQ6Z9zuPcDPB",
        opId: "8d0fa306-f978-47db-98f6-35e5fc3d58ef",
        userArgs: {
          headers: [$props.name]
        },
        cacheKey: `plasmic.$.8d0fa306-f978-47db-98f6-35e5fc3d58ef.$.`,
        invalidatedKeys: null,
        roleId: null
      };
    })
  };
  if (Object.keys(new$Queries).some(k => new$Queries[k] !== $queries[k])) {
    setDollarQueries(new$Queries);
    $queries = new$Queries;
  }
  return (
    <div
      data-plasmic-name={"root"}
      data-plasmic-override={overrides.root}
      data-plasmic-root={true}
      data-plasmic-for-node={forNode}
      className={classNames(
        projectcss.all,
        projectcss.root_reset,
        projectcss.plasmic_default_styles,
        projectcss.plasmic_mixins,
        projectcss.plasmic_tokens,
        plasmic_antd_5_hostless_css.plasmic_tokens,
        plasmic_plasmic_rich_components_css.plasmic_tokens,
        sty.root
      )}
    >
      <div className={classNames(projectcss.all, sty.freeBox__k8WbZ)}>
        <div
          data-plasmic-name={"columns"}
          data-plasmic-override={overrides.columns}
          className={classNames(projectcss.all, sty.columns)}
        >
          <div className={classNames(projectcss.all, sty.column__tn9Zf)}>
            <Stack__
              as={"div"}
              data-plasmic-name={"frame12"}
              data-plasmic-override={overrides.frame12}
              hasGap={true}
              className={classNames(projectcss.all, sty.frame12)}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__fdoAh
                )}
              >
                {"MEMBERSHIP"}
              </div>
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__sZEk
                )}
              >
                {"New for Members: Shoulder CPT Codes in ASSH Coding App"}
              </div>
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__bdDWq
                )}
              >
                {
                  "Shoulder-based CPT codes have now been added to the ASSH\u2019s Coding App! Free for members, the Coding App contains thousands of CPT codes with other built-in tools to help you code easier and more efficiently."
                }
              </div>
            </Stack__>
            <ButtonPrimary
              data-plasmic-name={"buttonPrimary"}
              data-plasmic-override={overrides.buttonPrimary}
              className={classNames("__wab_instance", sty.buttonPrimary)}
              megaMenuLink={[]}
              text={"View the Shoulder CPT Codes"}
              url={
                "https://coding.assh.org/category?name=Shoulder&id=aDf5b0000004CVSCA2"
              }
            />
          </div>
          <div className={classNames(projectcss.all, sty.column__toS2)}>
            <div className={classNames(projectcss.all, sty.freeBox__qTskc)}>
              <Stack__
                as={"div"}
                data-plasmic-name={"memberQuicklinks"}
                data-plasmic-override={overrides.memberQuicklinks}
                hasGap={true}
                className={classNames(projectcss.all, sty.memberQuicklinks)}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text___6ZuMq
                  )}
                >
                  {"Quick Links for Members"}
                </div>
                <Stack__
                  as={"div"}
                  data-plasmic-name={"column"}
                  data-plasmic-override={overrides.column}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.column)}
                >
                  <Stack__
                    as={"div"}
                    data-plasmic-name={"linkItem"}
                    data-plasmic-override={overrides.linkItem}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.linkItem)}
                  >
                    <ChevronRight2Icon
                      className={classNames(projectcss.all, sty.svg__se6Jl)}
                      role={"img"}
                    />

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__dw7Yf
                      )}
                    >
                      {"MyASSH"}
                    </div>
                  </Stack__>
                  <Stack__
                    as={"div"}
                    data-plasmic-name={"linkItem2"}
                    data-plasmic-override={overrides.linkItem2}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.linkItem2)}
                  >
                    <ChevronRight2Icon
                      className={classNames(projectcss.all, sty.svg__cdbla)}
                      role={"img"}
                    />

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__p0Hkz
                      )}
                    >
                      {"My Membership"}
                    </div>
                  </Stack__>
                  <Stack__
                    as={"div"}
                    data-plasmic-name={"linkItem3"}
                    data-plasmic-override={overrides.linkItem3}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.linkItem3)}
                  >
                    <ChevronRight2Icon
                      className={classNames(projectcss.all, sty.svg__zLd5K)}
                      role={"img"}
                    />

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___5Qa8Z
                      )}
                    >
                      {"Member Resources"}
                    </div>
                  </Stack__>
                  <Stack__
                    as={"div"}
                    data-plasmic-name={"linkItem4"}
                    data-plasmic-override={overrides.linkItem4}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.linkItem4)}
                  >
                    <ChevronRight2Icon
                      className={classNames(projectcss.all, sty.svg__lMbTu)}
                      role={"img"}
                    />

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__vdZg1
                      )}
                    >
                      {"Become a Member"}
                    </div>
                  </Stack__>
                  <Stack__
                    as={"div"}
                    data-plasmic-name={"linkItem5"}
                    data-plasmic-override={overrides.linkItem5}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.linkItem5)}
                  >
                    <ChevronRight2Icon
                      className={classNames(projectcss.all, sty.svg___5Tzb6)}
                      role={"img"}
                    />

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___7Dq
                      )}
                    >
                      {"Member Directory"}
                    </div>
                  </Stack__>
                  <Stack__
                    as={"div"}
                    data-plasmic-name={"linkItem6"}
                    data-plasmic-override={overrides.linkItem6}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.linkItem6)}
                  >
                    <ChevronRight2Icon
                      className={classNames(projectcss.all, sty.svg___0Krdj)}
                      role={"img"}
                    />

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__pMOi9
                      )}
                    >
                      {"CME & MOC"}
                    </div>
                  </Stack__>
                </Stack__>
              </Stack__>
            </div>
          </div>
        </div>
      </div>
      <div
        data-plasmic-name={"members"}
        data-plasmic-override={overrides.members}
        className={classNames(projectcss.all, sty.members)}
      >
        <div
          data-plasmic-name={"rectangle23"}
          data-plasmic-override={overrides.rectangle23}
          className={classNames(projectcss.all, sty.rectangle23)}
        />
      </div>
    </div>
  );
}

const PlasmicDescendants = {
  root: [
    "root",
    "columns",
    "frame12",
    "buttonPrimary",
    "memberQuicklinks",
    "column",
    "linkItem",
    "linkItem2",
    "linkItem3",
    "linkItem4",
    "linkItem5",
    "linkItem6",
    "members",
    "rectangle23"
  ],

  columns: [
    "columns",
    "frame12",
    "buttonPrimary",
    "memberQuicklinks",
    "column",
    "linkItem",
    "linkItem2",
    "linkItem3",
    "linkItem4",
    "linkItem5",
    "linkItem6"
  ],

  frame12: ["frame12"],
  buttonPrimary: ["buttonPrimary"],
  memberQuicklinks: [
    "memberQuicklinks",
    "column",
    "linkItem",
    "linkItem2",
    "linkItem3",
    "linkItem4",
    "linkItem5",
    "linkItem6"
  ],

  column: [
    "column",
    "linkItem",
    "linkItem2",
    "linkItem3",
    "linkItem4",
    "linkItem5",
    "linkItem6"
  ],

  linkItem: ["linkItem"],
  linkItem2: ["linkItem2"],
  linkItem3: ["linkItem3"],
  linkItem4: ["linkItem4"],
  linkItem5: ["linkItem5"],
  linkItem6: ["linkItem6"],
  members: ["members", "rectangle23"],
  rectangle23: ["rectangle23"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: PlasmicDescendants[nodeName],
          internalArgPropNames:
            PlasmicSectionMidHomepageMembershipInfoWithQuicklinks__ArgProps,
          internalVariantPropNames:
            PlasmicSectionMidHomepageMembershipInfoWithQuicklinks__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicSectionMidHomepageMembershipInfoWithQuicklinks__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicSectionMidHomepageMembershipInfoWithQuicklinks";
  } else {
    func.displayName = `PlasmicSectionMidHomepageMembershipInfoWithQuicklinks.${nodeName}`;
  }
  return func;
}

export const PlasmicSectionMidHomepageMembershipInfoWithQuicklinks =
  Object.assign(
    // Top-level PlasmicSectionMidHomepageMembershipInfoWithQuicklinks renders the root element
    makeNodeComponent("root"),
    {
      // Helper components rendering sub-elements
      columns: makeNodeComponent("columns"),
      frame12: makeNodeComponent("frame12"),
      buttonPrimary: makeNodeComponent("buttonPrimary"),
      memberQuicklinks: makeNodeComponent("memberQuicklinks"),
      column: makeNodeComponent("column"),
      linkItem: makeNodeComponent("linkItem"),
      linkItem2: makeNodeComponent("linkItem2"),
      linkItem3: makeNodeComponent("linkItem3"),
      linkItem4: makeNodeComponent("linkItem4"),
      linkItem5: makeNodeComponent("linkItem5"),
      linkItem6: makeNodeComponent("linkItem6"),
      members: makeNodeComponent("members"),
      rectangle23: makeNodeComponent("rectangle23"),
      // Metadata about props expected for PlasmicSectionMidHomepageMembershipInfoWithQuicklinks
      internalVariantProps:
        PlasmicSectionMidHomepageMembershipInfoWithQuicklinks__VariantProps,
      internalArgProps:
        PlasmicSectionMidHomepageMembershipInfoWithQuicklinks__ArgProps
    }
  );

export default PlasmicSectionMidHomepageMembershipInfoWithQuicklinks;
/* prettier-ignore-end */
