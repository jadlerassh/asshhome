/* eslint-disable */
/* tslint:disable */
// @ts-nocheck
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: 34tvEQuyqfK98iGCjMbawB
import * as React from "react";
import { EmbedCss } from "@plasmicpkgs/plasmic-embed-css";
import { ContentfulCredentialsProvider } from "@plasmicpkgs/plasmic-contentful";
import { AntdConfigProvider } from "@plasmicpkgs/antd5/skinny/registerConfigProvider";

export default function GlobalContextsProvider(props) {
  const {
    children,
    embedCssProps,
    contentfulCredentialsProviderProps,
    antdConfigProviderProps
  } = props;
  return (
    <EmbedCss
      {...embedCssProps}
      css={
        embedCssProps && "css" in embedCssProps
          ? embedCssProps.css
          : ".max-4-lines {\r\n  display: -webkit-box;\r\n  -webkit-box-orient: vertical;\r\n  -webkit-line-clamp: 4; /* Adjust the number of lines as needed */\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n}\r\n\r\n.max-3-lines {\r\n  display: -webkit-box;\r\n  -webkit-box-orient: vertical;\r\n  -webkit-line-clamp: 3; /* Adjust the number of lines as needed */\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n}\r\n\r\n.max-2-lines {\r\n  display: -webkit-box;\r\n  -webkit-box-orient: vertical;\r\n  -webkit-line-clamp: 2; /* Adjust the number of lines as needed */\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n}\r\n\r\n.heroLinkWrapper {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  width: 100%;\r\n  height: 92px;\r\n  padding: 0 16px;\r\n  box-sizing: border-box;\r\n  background-color: #fff;\r\n  filter: drop-shadow(5px 0px 5px rgba(0,0,0));\r\n}\r\n\r\n.heroLinkWrapperHover {\r\n  height: 100px;\r\n  border-top-left-radius: 10px;\r\n  border-top-right-radius: 10px;\r\n}\r\n\r\n.heroLinkWrapper * {\r\n  pointer-events: none;\r\n}\r\n\r\n.heroLinkIcon {\r\n  margin-left: 16px;\r\n  position: relative;\r\n  width: 30px;\r\n  height: 30px;\r\n  border-radius: 50%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  overflow: hidden;\r\n}\r\n\r\n.heroLinkIconBg {\r\n  position: absolute;\r\n  inset: 0;\r\n  background-color: var(--hero-bg-color);\r\n  opacity: 0.15;\r\n  border-radius: 50%;\r\n  z-index: 0;\r\n}\r\n\r\n.heroLinkIconBgHover {\r\n  opacity: 1 !important;\r\n}\r\n\r\n.heroLinkIconSVG {\r\n  position: relative;\r\n  z-index: 1;\r\n  width: 16px;\r\n  height: 16px;\r\n}\r\n\r\n.heroLinkButton {\r\n  font-size: 1rem;\r\n  font-weight: 550;\r\n  flex-shrink: 1;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  white-space: nowrap;\r\n  white-space: normal;\r\n  word-wrap: break-word;\r\n  overflow-wrap: break-word;\r\n}"
      }
    >
      <ContentfulCredentialsProvider
        {...contentfulCredentialsProviderProps}
        accessToken={
          contentfulCredentialsProviderProps &&
          "accessToken" in contentfulCredentialsProviderProps
            ? contentfulCredentialsProviderProps.accessToken
            : "aWvf6oSLTuqxKCxSUpokajdQr84hGQFE6zoJG7DVVLg"
        }
        environment={
          contentfulCredentialsProviderProps &&
          "environment" in contentfulCredentialsProviderProps
            ? contentfulCredentialsProviderProps.environment
            : "master"
        }
        space={
          contentfulCredentialsProviderProps &&
          "space" in contentfulCredentialsProviderProps
            ? contentfulCredentialsProviderProps.space
            : "lmfbwqzbh93n"
        }
      >
        <AntdConfigProvider
          {...antdConfigProviderProps}
          borderRadius={
            antdConfigProviderProps && "borderRadius" in antdConfigProviderProps
              ? antdConfigProviderProps.borderRadius
              : 6
          }
          colorBgBase={
            antdConfigProviderProps && "colorBgBase" in antdConfigProviderProps
              ? antdConfigProviderProps.colorBgBase
              : "#ffffff"
          }
          colorError={
            antdConfigProviderProps && "colorError" in antdConfigProviderProps
              ? antdConfigProviderProps.colorError
              : "#ff4d4f"
          }
          colorInfo={
            antdConfigProviderProps && "colorInfo" in antdConfigProviderProps
              ? antdConfigProviderProps.colorInfo
              : "#1677ff"
          }
          colorPrimary={
            antdConfigProviderProps && "colorPrimary" in antdConfigProviderProps
              ? antdConfigProviderProps.colorPrimary
              : "#1677ff"
          }
          colorSuccess={
            antdConfigProviderProps && "colorSuccess" in antdConfigProviderProps
              ? antdConfigProviderProps.colorSuccess
              : "#52c41a"
          }
          colorWarning={
            antdConfigProviderProps && "colorWarning" in antdConfigProviderProps
              ? antdConfigProviderProps.colorWarning
              : "#faad14"
          }
          controlHeight={
            antdConfigProviderProps &&
            "controlHeight" in antdConfigProviderProps
              ? antdConfigProviderProps.controlHeight
              : 32
          }
          defaultDark={
            antdConfigProviderProps && "defaultDark" in antdConfigProviderProps
              ? antdConfigProviderProps.defaultDark
              : false
          }
          lineWidth={
            antdConfigProviderProps && "lineWidth" in antdConfigProviderProps
              ? antdConfigProviderProps.lineWidth
              : 1
          }
          loadingText={
            antdConfigProviderProps && "loadingText" in antdConfigProviderProps
              ? antdConfigProviderProps.loadingText
              : undefined
          }
          removeLoading={
            antdConfigProviderProps &&
            "removeLoading" in antdConfigProviderProps
              ? antdConfigProviderProps.removeLoading
              : undefined
          }
          sizeStep={
            antdConfigProviderProps && "sizeStep" in antdConfigProviderProps
              ? antdConfigProviderProps.sizeStep
              : 4
          }
          sizeUnit={
            antdConfigProviderProps && "sizeUnit" in antdConfigProviderProps
              ? antdConfigProviderProps.sizeUnit
              : 4
          }
          themeStyles={
            antdConfigProviderProps && "themeStyles" in antdConfigProviderProps
              ? antdConfigProviderProps.themeStyles
              : true
              ? {
                  fontFamily: "Nunito Sans",
                  fontSize: "16px",
                  fontWeight: "400",
                  lineHeight: "1.5",
                  color: "#444444",
                  letterSpacing: "normal"
                }
              : undefined
          }
          wireframe={
            antdConfigProviderProps && "wireframe" in antdConfigProviderProps
              ? antdConfigProviderProps.wireframe
              : false
          }
        >
          {children}
        </AntdConfigProvider>
      </ContentfulCredentialsProvider>
    </EmbedCss>
  );
}
