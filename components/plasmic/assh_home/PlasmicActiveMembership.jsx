/* eslint-disable */
/* tslint:disable */
// @ts-nocheck
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: 34tvEQuyqfK98iGCjMbawB
// Component: R84m64p3fCw2
import * as React from "react";
import Head from "next/head";
import { useRouter } from "next/router";
import {
  Stack as Stack__,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  generateStateOnChangeProp,
  generateStateValueProp,
  useDollarState
} from "@plasmicapp/react-web";
import { useDataEnv } from "@plasmicapp/react-web/lib/host";
import SectionHomeMenuSection from "../../SectionHomeMenuSection"; // plasmic-import: HrBwnQh3XfKO/component
import ItemSectionTitleDescriptionItem from "../../ItemSectionTitleDescriptionItem"; // plasmic-import: jaOmCC9X_Oxf/component
import BlockTanCtaBlock from "../../BlockTanCtaBlock"; // plasmic-import: YJsN7RAC0P0B/component
import BlockQuoteBlock from "../../BlockQuoteBlock"; // plasmic-import: pkNfPBeJPFGR/component
import "@plasmicapp/react-web/lib/plasmic.css";
import plasmic_antd_5_hostless_css from "../antd_5_hostless/plasmic.module.css"; // plasmic-import: ohDidvG9XsCeFumugENU3J/projectcss
import plasmic_plasmic_rich_components_css from "../plasmic_rich_components/plasmic.module.css"; // plasmic-import: jkU633o1Cz7HrJdwdxhVHk/projectcss
import projectcss from "./plasmic.module.css"; // plasmic-import: 34tvEQuyqfK98iGCjMbawB/projectcss
import sty from "./PlasmicActiveMembership.module.css"; // plasmic-import: R84m64p3fCw2/css

createPlasmicElementProxy;

export const PlasmicActiveMembership__VariantProps = new Array();

export const PlasmicActiveMembership__ArgProps = new Array();

const $$ = {};

function useNextRouter() {
  try {
    return useRouter();
  } catch {}
  return undefined;
}

function PlasmicActiveMembership__RenderFunc(props) {
  const { variants, overrides, forNode } = props;
  const args = React.useMemo(
    () =>
      Object.assign(
        {},
        Object.fromEntries(
          Object.entries(props.args).filter(([_, v]) => v !== undefined)
        )
      ),
    [props.args]
  );
  const $props = {
    ...args,
    ...variants
  };
  const __nextRouter = useNextRouter();
  const $ctx = useDataEnv?.() || {};
  const refsRef = React.useRef({});
  const $refs = refsRef.current;
  const stateSpecs = React.useMemo(
    () => [
      {
        path: "sectionHomeMenuSection.openDropdown",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => "allclosed"
      }
    ],

    [$props, $ctx, $refs]
  );
  const $state = useDollarState(stateSpecs, {
    $props,
    $ctx,
    $queries: {},
    $refs
  });
  return (
    <React.Fragment>
      <Head></Head>

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            projectcss.plasmic_tokens,
            plasmic_antd_5_hostless_css.plasmic_tokens,
            plasmic_plasmic_rich_components_css.plasmic_tokens,
            sty.root
          )}
        >
          <SectionHomeMenuSection
            data-plasmic-name={"sectionHomeMenuSection"}
            data-plasmic-override={overrides.sectionHomeMenuSection}
            className={classNames("__wab_instance", sty.sectionHomeMenuSection)}
            onOpenDropdownChange={async (...eventArgs) => {
              generateStateOnChangeProp($state, [
                "sectionHomeMenuSection",
                "openDropdown"
              ]).apply(null, eventArgs);
              if (
                eventArgs.length > 1 &&
                eventArgs[1] &&
                eventArgs[1]._plasmic_state_init_
              ) {
                return;
              }
            }}
            openDropdown={generateStateValueProp($state, [
              "sectionHomeMenuSection",
              "openDropdown"
            ])}
          />

          <div
            data-plasmic-name={"columns"}
            data-plasmic-override={overrides.columns}
            className={classNames(projectcss.all, sty.columns)}
          >
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.column__rtgI9)}
            >
              <ItemSectionTitleDescriptionItem
                className={classNames(
                  "__wab_instance",
                  sty.itemSectionTitleDescriptionItem___3LI2
                )}
                descriptionSection={
                  "Active Membership is the core professional designation within the American Society for Surgery of the Hand (ASSH). Reserved for certified specialists committed to excellence in hand and upper extremity care, this membership level offers unparalleled access to education, research, and leadership within the field. Whether you\u2019re looking to deepen your expertise, expand your network, or shape the future of hand surgery, Active Membership is your next step."
                }
                title={"Active Membership"}
              />

              <BlockTanCtaBlock
                data-plasmic-name={"blockTanCtaBlock"}
                data-plasmic-override={overrides.blockTanCtaBlock}
                className={classNames("__wab_instance", sty.blockTanCtaBlock)}
              />
            </Stack__>
            <div className={classNames(projectcss.all, sty.column___86Tcy)}>
              <ItemSectionTitleDescriptionItem
                className={classNames(
                  "__wab_instance",
                  sty.itemSectionTitleDescriptionItem__paES
                )}
                descriptionSection={``}
                title={" "}
              />

              <BlockQuoteBlock
                data-plasmic-name={"blockQuoteBlock"}
                data-plasmic-override={overrides.blockQuoteBlock}
                className={classNames("__wab_instance", sty.blockQuoteBlock)}
              />
            </div>
          </div>
        </div>
      </div>
    </React.Fragment>
  );
}

const PlasmicDescendants = {
  root: [
    "root",
    "sectionHomeMenuSection",
    "columns",
    "blockTanCtaBlock",
    "blockQuoteBlock"
  ],

  sectionHomeMenuSection: ["sectionHomeMenuSection"],
  columns: ["columns", "blockTanCtaBlock", "blockQuoteBlock"],
  blockTanCtaBlock: ["blockTanCtaBlock"],
  blockQuoteBlock: ["blockQuoteBlock"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: PlasmicDescendants[nodeName],
          internalArgPropNames: PlasmicActiveMembership__ArgProps,
          internalVariantPropNames: PlasmicActiveMembership__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicActiveMembership__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicActiveMembership";
  } else {
    func.displayName = `PlasmicActiveMembership.${nodeName}`;
  }
  return func;
}

export const PlasmicActiveMembership = Object.assign(
  // Top-level PlasmicActiveMembership renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    sectionHomeMenuSection: makeNodeComponent("sectionHomeMenuSection"),
    columns: makeNodeComponent("columns"),
    blockTanCtaBlock: makeNodeComponent("blockTanCtaBlock"),
    blockQuoteBlock: makeNodeComponent("blockQuoteBlock"),
    // Metadata about props expected for PlasmicActiveMembership
    internalVariantProps: PlasmicActiveMembership__VariantProps,
    internalArgProps: PlasmicActiveMembership__ArgProps,
    // Page metadata
    pageMetadata: {
      title: "",
      description: "",
      ogImageSrc: "",
      canonical: ""
    }
  }
);

export default PlasmicActiveMembership;
/* prettier-ignore-end */
